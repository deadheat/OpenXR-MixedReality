static const uint8_t vs_PbrVertexShader_glsl[1834] =
{
	0x56, 0x53, 0x48, 0x08, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xcc, 0x7f, 0x4f, 0x02, 0x00, 0x10, 0x75, // VSH........O...u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x04, // _viewProjection.
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, // ........u_modelT
	0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x04, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe7, 0x06, // oWorld..........
	0x00, 0x00, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x68, 0x69, 0x67, 0x68, // ..attribute high
	0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, // p vec4 a_color0;
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .attribute highp
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, //  vec3 a_normal;.
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, // attribute highp 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, // vec4 a_position;
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .attribute highp
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x3b, //  vec4 a_tangent;
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .attribute highp
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, //  vec2 a_texcoord
	0x30, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x68, 0x69, 0x67, // 0;.attribute hig
	0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x30, 0x3b, // hp vec4 i_data0;
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .attribute highp
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x31, 0x3b, 0x0a, 0x61, //  vec4 i_data1;.a
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, // ttribute highp v
	0x65, 0x63, 0x34, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x32, 0x3b, 0x0a, 0x61, 0x74, 0x74, // ec4 i_data2;.att
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, // ribute highp vec
	0x34, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x33, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, // 4 i_data3;.varyi
	0x6e, 0x67, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, // ng highp mat3 v_
	0x54, 0x42, 0x4e, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x69, 0x67, // TBN;.varying hig
	0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, // hp vec4 v_color0
	0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, // ;.varying highp 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, // vec3 v_positionW
	0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x69, // orld;.varying hi
	0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // ghp vec2 v_texco
	0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x68, 0x69, // ord0;.uniform hi
	0x67, 0x68, 0x70, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, // ghp mat4 u_viewP
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // rojection;.unifo
	0x72, 0x6d, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // rm highp mat4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x76, 0x6f, // modelToWorld;.vo
	0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x68, // id main ().{.  h
	0x69, 0x67, 0x68, 0x70, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, // ighp mat4 transf
	0x6f, 0x72, 0x6d, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, // orm_1;.  transfo
	0x72, 0x6d, 0x5f, 0x31, 0x5b, 0x30, 0x5d, 0x20, 0x3d, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, // rm_1[0] = i_data
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x31, // 0;.  transform_1
	0x5b, 0x31, 0x5d, 0x20, 0x3d, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x31, 0x3b, 0x0a, 0x20, // [1] = i_data1;. 
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x31, 0x5b, 0x32, 0x5d, 0x20, //  transform_1[2] 
	0x3d, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x72, 0x61, // = i_data2;.  tra
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x31, 0x5b, 0x33, 0x5d, 0x20, 0x3d, 0x20, 0x69, 0x5f, // nsform_1[3] = i_
	0x64, 0x61, 0x74, 0x61, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x6d, // data3;.  highp m
	0x61, 0x74, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, // at4 tmpvar_2;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x72, 0x61, 0x6e, // tmpvar_2 = (tran
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x31, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // sform_1 * u_mode
	0x6c, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, // lToWorld);.  hig
	0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, // hp vec4 tmpvar_3
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x28, // ;.  tmpvar_3 = (
	0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, // a_position * tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, // var_2);.  gl_Pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ition = (tmpvar_
	0x33, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, // 3 * u_viewProjec
	0x74, 0x69, 0x6f, 0x6e, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // tion);.  v_posit
	0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, // ionWorld = (tmpv
	0x61, 0x72, 0x5f, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // ar_3.xyz / tmpva
	0x72, 0x5f, 0x33, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, // r_3.w);.  highp 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, // vec4 tmpvar_4;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x30, 0x2e, //  tmpvar_4.w = 0.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x78, 0x79, // 0;.  tmpvar_4.xy
	0x7a, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x20, 0x20, // z = a_normal;.  
	0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // highp vec3 tmpva
	0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x20, // r_5;.  tmpvar_5 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x74, 0x6d, 0x70, // = normalize((tmp
	0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, // var_4 * tmpvar_2
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, // ).xyz);.  highp 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, // vec4 tmpvar_6;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x30, 0x2e, //  tmpvar_6.w = 0.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x79, // 0;.  tmpvar_6.xy
	0x7a, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x78, 0x79, // z = a_tangent.xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // z;.  highp vec3 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // tmpvar_7;.  tmpv
	0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // ar_7 = normalize
	0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, // ((tmpvar_6 * tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x68, // var_2).xyz);.  h
	0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ighp vec3 tmpvar
	0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x3d, // _8;.  tmpvar_8 =
	0x20, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x79, 0x7a, 0x78, //  (((tmpvar_5.yzx
	0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x7a, 0x78, 0x79, 0x29, //  * tmpvar_7.zxy)
	0x20, 0x2d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x7a, 0x78, 0x79, //  - (tmpvar_5.zxy
	0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x79, 0x7a, 0x78, 0x29, //  * tmpvar_7.yzx)
	0x29, 0x20, 0x2a, 0x20, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x29, // ) * a_tangent.w)
	0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, // ;.  highp vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // mpvar_9;.  tmpva
	0x72, 0x5f, 0x39, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, // r_9.x = tmpvar_7
	0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2e, 0x79, // .x;.  tmpvar_9.y
	0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x2e, 0x78, 0x3b, 0x0a, 0x20, //  = tmpvar_8.x;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x6d, //  tmpvar_9.z = tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, // pvar_5.x;.  high
	0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, // p vec3 tmpvar_10
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2e, 0x78, 0x20, // ;.  tmpvar_10.x 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, // = tmpvar_7.y;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x74, 0x6d, // tmpvar_10.y = tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // pvar_8.y;.  tmpv
	0x61, 0x72, 0x5f, 0x31, 0x30, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ar_10.z = tmpvar
	0x5f, 0x35, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, // _5.y;.  highp ve
	0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, // c3 tmpvar_11;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x74, 0x6d, // tmpvar_11.x = tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // pvar_7.z;.  tmpv
	0x61, 0x72, 0x5f, 0x31, 0x31, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ar_11.y = tmpvar
	0x5f, 0x38, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // _8.z;.  tmpvar_1
	0x31, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x7a, // 1.z = tmpvar_5.z
	0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x74, // ;.  highp mat3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // mpvar_12;.  tmpv
	0x61, 0x72, 0x5f, 0x31, 0x32, 0x5b, 0x30, 0x5d, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // ar_12[0] = tmpva
	0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, // r_9;.  tmpvar_12
	0x5b, 0x31, 0x5d, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, // [1] = tmpvar_10;
	0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x5b, 0x32, 0x5d, 0x20, // .  tmpvar_12[2] 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x76, // = tmpvar_11;.  v
	0x5f, 0x54, 0x42, 0x4e, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, // _TBN = tmpvar_12
	0x3b, 0x0a, 0x20, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, // ;.  v_texcoord0 
	0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x20, // = a_texcoord0;. 
	0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x63, 0x6f, //  v_color0 = a_co
	0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,                                     // lor0;.}...
};
static const uint8_t vs_PbrVertexShader_spv[2660] =
{
	0x56, 0x53, 0x48, 0x08, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xcc, 0x7f, 0x4f, 0x02, 0x00, 0x0e, 0x75, // VSH........O...u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x04, 0x01, 0x40, // _modelToWorld..@
	0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // ......u_viewProj
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x0a, // ection..........
	0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x91, 0x01, // ....#...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, // ................
	0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, // ......GLSL.std.4
	0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // 50..............
	0x00, 0x00, 0x0f, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, // ..............ma
	0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xa7, 0x00, // in..............
	0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xb4, 0x00, // ................
	0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00, 0xd5, 0x00, // ................
	0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, // ................
	0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x52, 0x00, // ..main........R.
	0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, // ..UniformBlock..
	0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75, 0x5f, // ......R.......u_
	0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, // viewProjection..
	0x00, 0x00, 0x06, 0x00, 0x07, 0x00, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x75, 0x5f, // ......R.......u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0x00, 0x05, 0x00, // modelToWorld....
	0x03, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0xa0, 0x00, // ..T.............
	0x00, 0x00, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, // ..a_color0......
	0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, // ......a_normal..
	0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, // ..........a_posi
	0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x61, 0x5f, // tion..........a_
	0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0xae, 0x00, // tangent.........
	0x00, 0x00, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x05, 0x00, // ..a_texcoord0...
	0x04, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x30, 0x00, 0x05, 0x00, // ......i_data0...
	0x04, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x31, 0x00, 0x05, 0x00, // ......i_data1...
	0x04, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x32, 0x00, 0x05, 0x00, // ......i_data2...
	0x04, 0x00, 0xba, 0x00, 0x00, 0x00, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x33, 0x00, 0x05, 0x00, // ......i_data3...
	0x0a, 0x00, 0xd1, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, // ......@entryPoin
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, // tOutput.gl_Posit
	0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0xd5, 0x00, 0x00, 0x00, 0x40, 0x65, // ion...........@e
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, // ntryPointOutput.
	0x76, 0x5f, 0x54, 0x42, 0x4e, 0x00, 0x05, 0x00, 0x09, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x40, 0x65, // v_TBN.........@e
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, // ntryPointOutput.
	0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x00, 0x05, 0x00, 0x0b, 0x00, 0xdc, 0x00, // v_color0........
	0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, // ..@entryPointOut
	0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, // put.v_positionWo
	0x72, 0x6c, 0x64, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x40, 0x65, // rld...........@e
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, // ntryPointOutput.
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x00, 0x00, 0x48, 0x00, // v_texcoord0...H.
	0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, // ..R...........H.
	0x05, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, // ..R.......#.....
	0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, // ..H...R.........
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, // ......H...R.....
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, // ......H...R.....
	0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x52, 0x00, // ..#...@...H...R.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, // ..............G.
	0x03, 0x00, 0x52, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x54, 0x00, // ..R.......G...T.
	0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x54, 0x00, // ..".......G...T.
	0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xa0, 0x00, // ..!.......G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xa4, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xa7, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xaa, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xae, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xb1, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xb4, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xb7, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xba, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xd1, 0x00, // ..........G.....
	0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xd5, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xd8, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xdc, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0xe0, 0x00, // ..........G.....
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, // ..!.............
	0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x07, 0x00, // ...... .........
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x04, 0x00, 0x09, 0x00, // ................
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x12, 0x00, // ................
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, // ..........+.....
	0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x37, 0x00, // ..%...........7.
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x37, 0x00, // .. .......+...7.
	0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x04, 0x00, 0x45, 0x00, // ..8...........E.
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x37, 0x00, // ..........+...7.
	0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x04, 0x00, 0x52, 0x00, // ..H...........R.
	0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x53, 0x00, // ..E...E... ...S.
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x53, 0x00, // ......R...;...S.
	0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x55, 0x00, // ..T....... ...U.
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x9f, 0x00, // ......E... .....
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x9f, 0x00, // ..........;.....
	0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xa3, 0x00, // .......... .....
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xa3, 0x00, // ..........;.....
	0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x9f, 0x00, // ..........;.....
	0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x9f, 0x00, // ..........;.....
	0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xad, 0x00, // .......... .....
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xad, 0x00, // ..........;.....
	0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x9f, 0x00, // ..........;.....
	0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x9f, 0x00, // ..........;.....
	0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x9f, 0x00, // ..........;.....
	0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x9f, 0x00, // ..........;.....
	0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xd0, 0x00, // .......... .....
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xd0, 0x00, // ..........;.....
	0x00, 0x00, 0xd1, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xd4, 0x00, // .......... .....
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xd4, 0x00, // ..........;.....
	0x00, 0x00, 0xd5, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xd0, 0x00, // ..........;.....
	0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xdb, 0x00, // .......... .....
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xdb, 0x00, // ..........;.....
	0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xdf, 0x00, // .......... .....
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0xdf, 0x00, // ..........;.....
	0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x45, 0x00, // ..............E.
	0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, // ......6.........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, // ................
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0xa0, 0x00, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0xa4, 0x00, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xa7, 0x00, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0xaa, 0x00, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0xae, 0x00, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb1, 0x00, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0xb4, 0x00, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0xb7, 0x00, // ..=.............
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0xba, 0x00, // ..=.............
	0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x45, 0x00, 0x00, 0x00, 0x81, 0x01, 0x00, 0x00, 0xb2, 0x00, // ..R...E.........
	0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x45, 0x00, // ..........R...E.
	0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 0x81, 0x01, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x45, 0x00, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 0xb8, 0x00, // ..R...E.........
	0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00, 0x45, 0x00, // ..........R...E.
	0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x55, 0x00, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x54, 0x00, // ..A...U.......T.
	0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x45, 0x00, 0x00, 0x00, 0x11, 0x01, // ..8...=...E.....
	0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 0x92, 0x00, 0x05, 0x00, 0x45, 0x00, 0x00, 0x00, 0x13, 0x01, // ..........E.....
	0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x10, 0x00, // ................
	0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x13, 0x01, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x41, 0x00, // ..............A.
	0x05, 0x00, 0x55, 0x00, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x48, 0x00, // ..U.......T...H.
	0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x45, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x17, 0x01, // ..=...E.........
	0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x18, 0x01, // ................
	0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, 0x01, // ......O.........
	0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1f, 0x01, // ......Q.........
	0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x07, 0x00, // ..........P.....
	0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 0x1f, 0x01, // .. .............
	0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x1d, 0x01, // ..........!.....
	0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x25, 0x01, // .. ...Q.......%.
	0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, // ..........Q.....
	0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, // ..'...........Q.
	0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x29, 0x01, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x02, 0x00, // ......).........
	0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x10, 0x00, 0x00, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x25, 0x01, // ..P.......*...%.
	0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0x29, 0x01, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x91, 0x00, // ..'...)...%.....
	0x05, 0x00, 0x10, 0x00, 0x00, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x13, 0x01, 0x00, 0x00, 0x2a, 0x01, // ......+.......*.
	0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x2b, 0x01, // ..O.......,...+.
	0x00, 0x00, 0x2b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, // ..+.............
	0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x01, 0x00, // ..........-.....
	0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, // ..E...,...Q.....
	0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, // ..0...........Q.
	0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x32, 0x01, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0x01, 0x00, // ......2.........
	0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x34, 0x01, 0x00, 0x00, 0xab, 0x00, // ..Q.......4.....
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x10, 0x00, 0x00, 0x00, 0x35, 0x01, // ......P.......5.
	0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0x32, 0x01, 0x00, 0x00, 0x34, 0x01, 0x00, 0x00, 0x25, 0x00, // ..0...2...4...%.
	0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x10, 0x00, 0x00, 0x00, 0x36, 0x01, 0x00, 0x00, 0x13, 0x01, // ..........6.....
	0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x37, 0x01, // ..5...O.......7.
	0x00, 0x00, 0x36, 0x01, 0x00, 0x00, 0x36, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ..6...6.........
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x01, // ..............8.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, 0x0c, 0x00, // ......E...7.....
	0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, // ......;.......D.
	0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, // ..-...8...Q.....
	0x00, 0x00, 0x3d, 0x01, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x8e, 0x00, // ..=.............
	0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0x3b, 0x01, 0x00, 0x00, 0x3d, 0x01, // ......>...;...=.
	0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x09, 0x00, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x00, 0x38, 0x01, // ..P.......Z...8.
	0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xd1, 0x00, // ..>...-...>.....
	0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xd5, 0x00, 0x00, 0x00, 0x5a, 0x01, // ......>.......Z.
	0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x3e, 0x00, // ..>...........>.
	0x03, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0xe0, 0x00, // ......!...>.....
	0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x09, // ..........8.....
	0x05, 0x00, 0x02, 0x00, 0x01, 0x00, 0x03, 0x00, 0x10, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0x80, 0x00,                                                                         // ....
};
static const uint8_t vs_PbrVertexShader_dx9[2284] =
{
	0x56, 0x53, 0x48, 0x08, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xcc, 0x7f, 0x4f, 0x02, 0x00, 0x10, 0x75, // VSH........O...u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x04, // _viewProjection.
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, // ........u_modelT
	0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x04, 0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x94, 0x08, // oWorld..@.......
	0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x9a, 0x47, 0x97, 0x2d, 0xab, 0xbe, 0x51, 0x3b, 0x08, 0x3a, // ..DXBC.G.-..Q;.:
	0xf2, 0xef, 0xf5, 0x1f, 0x37, 0x53, 0x01, 0x00, 0x00, 0x00, 0x94, 0x08, 0x00, 0x00, 0x03, 0x00, // ....7S..........
	0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0x49, 0x53, // ..,...<.......IS
	0x47, 0x4e, 0x08, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xe0, 0x00, // GN..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0xed, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xfe, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, // ................
	0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xfe, 0x00, // ................
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, // ................
	0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xfe, 0x00, // ................
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, // ................
	0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x4e, 0x4f, 0x52, 0x4d, // ......COLOR.NORM
	0x41, 0x4c, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x41, 0x4e, 0x47, // AL.POSITION.TANG
	0x45, 0x4e, 0x54, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0x4f, 0x53, // ENT.TEXCOORD..OS
	0x47, 0x4e, 0xd4, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xb0, 0x00, // GN..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0xbc, 0x00, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0xc4, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, // ................
	0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0xca, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, // ................
	0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, // ......SV_POSITIO
	0x4e, 0x00, 0x54, 0x41, 0x4e, 0x47, 0x45, 0x4e, 0x54, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, // N.TANGENT.COLOR.
	0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0x53, 0x48, 0x45, 0x58, 0x74, 0x06, // TEXCOORD..SHEXt.
	0x00, 0x00, 0x50, 0x00, 0x01, 0x00, 0x9d, 0x01, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 0x59, 0x00, // ..P.......j...Y.
	0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x5f, 0x00, // ..F. ........._.
	0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x72, 0x10, // .........._...r.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x02, 0x00, // ......_.........
	0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x5f, 0x00, // .._..........._.
	0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, // ..2......._.....
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x06, 0x00, // ......_.........
	0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x5f, 0x00, // .._..........._.
	0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, 0xf2, 0x20, // ..........g.... 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x72, 0x20, // ..........e...r 
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x72, 0x20, 0x10, 0x00, 0x02, 0x00, // ......e...r ....
	0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x72, 0x20, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x65, 0x00, // ..e...r ......e.
	0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x72, 0x20, // ... ......e...r 
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x32, 0x20, 0x10, 0x00, 0x06, 0x00, // ......e...2 ....
	0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x12, 0x00, // ..h.............
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x22, 0x00, //  .............".
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x42, 0x00, //  .............B.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x82, 0x00, //  ...............
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x07, 0x82, 0x00, //  ...............
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, // ......F.......F.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, // ..F.......F. ...
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, // ..F.......F. ...
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, // ..........".....
	0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, // ..F.......F. ...
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, // ..........B.....
	0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, // ..F.......F. ...
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, // ..F.......F.....
	0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x1e, // ..............F.
	0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, // ......F. .......
	0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x1e, // ..............F.
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, // ......F. .......
	0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x1e, // ......".......F.
	0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, // ......F. .......
	0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x1e, // ......B.......F.
	0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, // ......F. .......
	0x00, 0x00, 0x11, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, // ......".......F.
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x11, 0x00, // ......F.........
	0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x08, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x05, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x08, 0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x06, 0x00, // ..".......F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x07, 0x00, // ..B.......F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x02, 0x00, // ..B.......F.....
	0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x12, 0x20, // ..F............ 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x22, 0x20, //  ............." 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x42, 0x20, //  .............B 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x82, 0x20, //  .............. 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x72, 0x20, //  .............r 
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, // ......F.........
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, // ..........".....
	0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, // ..F.......F.....
	0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x12, // ......B.......F.
	0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, // ......F.........
	0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, // ..B.......F.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, 0x00, // ..F.............
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, // ......F.......F.
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, // ..F.......F.....
	0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x12, // ......".......F.
	0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, // ......F.........
	0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, // ..F.......D.....
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, // ......:.......8.
	0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, // ..r.............
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, // ..F.............
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, // ......F.......F.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, // ......D.........
	0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, // ..:.......8...r.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, // ..............F.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, // ......8...r.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, // ..F.......F.....
	0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x26, 0x09, // ..2...r.......&.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x04, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, // ..............F.
	0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, // ..A.......8...r.
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x1f, // ......F.........
	0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x20, 0x10, 0x00, 0x01, 0x00, // ......6..." ....
	0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x20, // ..........6.... 
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, // ......*.......6.
	0x00, 0x05, 0x42, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, // ..B ............
	0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, // ..6.... ........
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x20, 0x10, 0x00, 0x03, 0x00, // ......6.... ....
	0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x20, // ..........6...B 
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, // ......*.......6.
	0x00, 0x05, 0x42, 0x20, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, // ..B ............
	0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, // ..6..." ........
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x20, 0x10, 0x00, 0x03, 0x00, // ......6..." ....
	0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0xf2, 0x20, // ..*.......6.... 
	0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, // ......F.......6.
	0x00, 0x05, 0x32, 0x20, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x04, 0x00, // ..2 ......F.....
	0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x00, 0x09, 0x05, 0x00, 0x02, 0x00, 0x01, 0x00, 0x03, 0x00, // ..>.............
	0x10, 0x00, 0x17, 0x00, 0x16, 0x00, 0x15, 0x00, 0x14, 0x00, 0x80, 0x00,                         // ............
};
static const uint8_t vs_PbrVertexShader_dx11[59128] =
{
	0x56, 0x53, 0x48, 0x08, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xcc, 0x7f, 0x4f, 0x02, 0x00, 0x10, 0x75, // VSH........O...u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x04, // _viewProjection.
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, // ........u_modelT
	0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x04, 0x00, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa0, 0xe6, // oWorld..@.......
	0x00, 0x00, 0x44, 0x58, 0x42, 0x43, 0x7c, 0x0b, 0x2c, 0xac, 0x12, 0xd2, 0xf2, 0x82, 0x71, 0xf6, // ..DXBC|.,.....q.
	0x3a, 0x06, 0x45, 0xd8, 0x21, 0x46, 0x01, 0x00, 0x00, 0x00, 0xa0, 0xe6, 0x00, 0x00, 0x04, 0x00, // :.E.!F..........
	0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0x98, 0x08, // ..0...@.........
	0x00, 0x00, 0x49, 0x53, 0x47, 0x4e, 0x08, 0x01, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x08, 0x00, // ..ISGN..........
	0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, // ................
	0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x0f, // ................
	0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x07, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0f, 0x0f, // ................
	0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x05, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x0f, // ................
	0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, // ..........COLOR.
	0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, // NORMAL.POSITION.
	0x54, 0x41, 0x4e, 0x47, 0x45, 0x4e, 0x54, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, // TANGENT.TEXCOORD
	0x00, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0xd4, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, // ..OSGN..........
	0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x08, // ................
	0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x08, // ................
	0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x07, 0x08, // ................
	0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, // ................
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, // ..........SV_POS
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x41, 0x4e, 0x47, 0x45, 0x4e, 0x54, 0x00, 0x43, 0x4f, // ITION.TANGENT.CO
	0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0x53, 0x48, // LOR.TEXCOORD..SH
	0x45, 0x58, 0x74, 0x06, 0x00, 0x00, 0x50, 0x00, 0x01, 0x00, 0x9d, 0x01, 0x00, 0x00, 0x6a, 0x08, // EXt...P.......j.
	0x00, 0x01, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, // ..Y...F. .......
	0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, // .._..........._.
	0x00, 0x03, 0x72, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, // ..r......._.....
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x03, 0x00, // ......_.........
	0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x5f, 0x00, // .._...2......._.
	0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, // .........._.....
	0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x07, 0x00, // ......_.........
	0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x67, 0x00, // .._...........g.
	0x00, 0x04, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, // ... ..........e.
	0x00, 0x03, 0x72, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x72, 0x20, // ..r ......e...r 
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x72, 0x20, 0x10, 0x00, 0x03, 0x00, // ......e...r ....
	0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x65, 0x00, // ..e.... ......e.
	0x00, 0x03, 0x72, 0x20, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x32, 0x20, // ..r ......e...2 
	0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x11, 0x00, // ......h.........
	0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x05, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x08, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x06, 0x00, // ..".......F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x07, 0x00, // ..B.......F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x08, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x02, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x82, 0x00, // ..F.............
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x12, 0x00, //  ...............
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x22, 0x00, //  .............".
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x42, 0x00, //  .............B.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x8e, // ......F.......F.
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x07, 0x12, 0x00, //  ...............
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, // ......F.......F.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, // ..F.......F. ...
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, // ..F.......F. ...
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x22, 0x00, 0x10, 0x00, 0x02, 0x00, // ..........".....
	0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, // ..F.......F. ...
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, // ..........B.....
	0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, // ..F.......F. ...
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x00, 0x00, // ..........".....
	0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, // ..F.......F.....
	0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, // ..............F.
	0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, // ......F. .......
	0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, // ..............F.
	0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, // ......F. .......
	0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, // ......".......F.
	0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, // ......F. .......
	0x00, 0x00, 0x11, 0x00, 0x00, 0x08, 0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, // ......B.......F.
	0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, // ......F. .......
	0x00, 0x00, 0x11, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, // ......B.......F.
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x11, 0x00, // ......F.........
	0x00, 0x08, 0x12, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, // ... ......F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x08, 0x22, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, // .." ......F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x08, 0x42, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, // ..B ......F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x11, 0x00, // ..F. ...........
	0x00, 0x08, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x00, 0x00, // ... ......F.....
	0x00, 0x00, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, // ..F. ...........
	0x00, 0x07, 0x72, 0x20, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, // ..r ......F.....
	0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x22, 0x00, // ..............".
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, // ......F.......F.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, // ..........B.....
	0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, // ..F.......F.....
	0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, // ......B.......F.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, // ......F.........
	0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x12, 0x00, // ..F.............
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, // ......F.......F.
	0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, // ..........".....
	0x00, 0x00, 0x46, 0x12, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, // ..F.......F.....
	0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, // ..............F.
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, // ......F.......D.
	0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, // ..........:.....
	0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x0f, // ..8...r.........
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, // ......F.........
	0x00, 0x07, 0x82, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, // ..........F.....
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x05, 0x82, 0x00, // ..F.......D.....
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, // ......:.......8.
	0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x00, 0x00, // ..r.............
	0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x72, 0x00, // ..F.......8...r.
	0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x02, // ......F.......F.
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, // ......2...r.....
	0x00, 0x00, 0x26, 0x09, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x04, 0x10, 0x00, 0x01, 0x00, // ..&.............
	0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, // ..F...A.......8.
	0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, // ..r.......F.....
	0x00, 0x00, 0xf6, 0x1f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x20, // ..........6..." 
	0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, // ..............6.
	0x00, 0x05, 0x12, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, // ... ......*.....
	0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, // ..6...B ........
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x20, 0x10, 0x00, 0x02, 0x00, // ......6.... ....
	0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x20, // ..........6.... 
	0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, // ..............6.
	0x00, 0x05, 0x42, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, // ..B ......*.....
	0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x42, 0x20, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, // ..6...B ........
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x20, 0x10, 0x00, 0x02, 0x00, // ......6..." ....
	0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x20, // ..........6..." 
	0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, // ......*.......6.
	0x00, 0x05, 0xf2, 0x20, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x00, 0x00, // ... ......F.....
	0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x10, // ..6...2 ......F.
	0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0x53, 0x50, 0x44, 0x42, 0x00, 0xde, // ......>...SPDB..
	0x00, 0x00, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x43, 0x2f, 0x43, 0x2b, // ..Microsoft C/C+
	0x2b, 0x20, 0x4d, 0x53, 0x46, 0x20, 0x37, 0x2e, 0x30, 0x30, 0x0d, 0x0a, 0x1a, 0x44, 0x53, 0x00, // + MSF 7.00...DS.
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0xe0, 0x01, // ..........o.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ......m.........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, // ..8.............
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, // ...... ...<.....
	0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x05, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x94, 0x2e, 0x31, 0x01, 0x9c, 0xf9, 0x64, 0x5f, 0x01, 0x00, 0x00, 0x00, 0x42, 0x07, // ....1...d_....B.
	0xd7, 0x86, 0x83, 0xcf, 0xf7, 0x4c, 0x85, 0xaa, 0x8c, 0xf2, 0xd5, 0x19, 0xf4, 0x4b, 0x00, 0x00, // .....L.......K..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x51, 0x33, 0x01, 0x00, 0x00, // ...........Q3...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x53, 0x56, 0x5f, 0x50, 0x4f, 0x53, 0x49, // ..tion : SV_POSI
	0x54, 0x49, 0x4f, 0x4e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x76, // TION;.float3x3 v
	0x5f, 0x54, 0x42, 0x4e, 0x20, 0x3a, 0x20, 0x54, 0x41, 0x4e, 0x47, 0x45, 0x4e, 0x54, 0x3b, 0x0a, // _TBN : TANGENT;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, // float4 v_color0 
	0x3a, 0x20, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x30, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // : COLOR0;.float3
	0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6c, 0x64, //  v_positionWorld
	0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x31, 0x3b, 0x0a, 0x66, 0x6c, //  : TEXCOORD1;.fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // oat2 v_texcoord0
	0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x3b, 0x0a, 0x7d, 0x3b, //  : TEXCOORD0;.};
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, // .float intBitsTo
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // Float(int _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, // return asfloat(_
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x69, 0x6e, 0x74, // x); }.float2 int
	0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // BitsToFloat(uint
	0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, // 2 _x) { return a
	0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // sfloat(_x); }.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, // oat3 intBitsToFl
	0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // oat(uint3 _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, // return asfloat(_
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x74, // x); }.float4 int
	0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // BitsToFloat(uint
	0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, // 4 _x) { return a
	0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // sfloat(_x); }.fl
	0x6f, 0x61, 0x74, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, // oat uintBitsToFl
	0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, // oat(uint _x) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, // eturn asfloat(_x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x69, 0x6e, 0x74, // ); }.float2 uint
	0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, // BitsToFloat(uint
	0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, // 2 _x) { return a
	0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // sfloat(_x); }.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, // oat3 uintBitsToF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // loat(uint3 _x) {
	0x20, 0x72, 0xc6, 0x5a, 0x00, 0x00, 0x4c, 0xe8, 0x03, 0x00, 0x75, 0x83, 0x01, 0x00, 0x55, 0x28, //  r.Z..L...u...U(
	0x02, 0x00, 0x2d, 0xf2, 0x03, 0x00, 0xc0, 0xca, 0x01, 0x00, 0xe2, 0x7b, 0x02, 0x00, 0x31, 0xfb, // ..-........{..1.
	0x03, 0x00, 0xfb, 0x0e, 0x00, 0x00, 0x67, 0x9f, 0x01, 0x00, 0x7d, 0xb5, 0x02, 0x00, 0x00, 0x10, // ......g...}.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x2f, 0x2f, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x20, 0x63, 0x6f, 0x6d, // ..// shaderc com
	0x6d, 0x61, 0x6e, 0x64, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x0a, 0x2f, 0x2f, 0x20, 0x43, 0x3a, // mand line:.// C:
	0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x74, 0x2d, 0x6f, 0x6c, 0x6f, 0x6c, 0x75, 0x5c, 0x73, // .Users.t-ololu.s
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x5c, 0x62, 0x67, 0x66, 0x78, // ource.repos.bgfx
	0x5c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5c, 0x77, 0x69, 0x6e, 0x33, 0x32, 0x5f, 0x76, 0x73, // ..build.win32_vs
	0x32, 0x30, 0x31, 0x37, 0x5c, 0x62, 0x69, 0x6e, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, // 2017.bin.shaderc
	0x44, 0x65, 0x62, 0x75, 0x67, 0x20, 0x2d, 0x69, 0x20, 0x2e, 0x2f, 0x20, 0x2d, 0x2d, 0x74, 0x79, // Debug -i ./ --ty
	0x70, 0x65, 0x20, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20, 0x2d, 0x2d, 0x64, 0x65, 0x62, 0x75, // pe vertex --debu
	0x67, 0x20, 0x2d, 0x4f, 0x20, 0x30, 0x20, 0x2d, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, // g -O 0 --platfor
	0x6d, 0x20, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x2d, 0x70, 0x20, 0x76, 0x73, 0x5f, // m windows -p vs_
	0x35, 0x5f, 0x30, 0x20, 0x2d, 0x4f, 0x20, 0x33, 0x20, 0x2d, 0x66, 0x20, 0x76, 0x73, 0x5f, 0x50, // 5_0 -O 3 -f vs_P
	0x62, 0x72, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x73, // brVertexShader.s
	0x63, 0x20, 0x2d, 0x6f, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x2e, // c -o ShaderTemp.
	0x62, 0x69, 0x6e, 0x2e, 0x68, 0x20, 0x2d, 0x2d, 0x62, 0x69, 0x6e, 0x32, 0x63, 0x20, 0x76, 0x73, // bin.h --bin2c vs
	0x5f, 0x50, 0x62, 0x72, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, // _PbrVertexShader
	0x5f, 0x64, 0x78, 0x31, 0x31, 0x0a, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x4f, // _dx11...struct O
	0x75, 0x74, 0x70, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, // utput.{.float4 g
	0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x53, 0x56, 0x5f, // l_Position : SV_
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // POSITION;.float3
	0x78, 0x33, 0x20, 0x76, 0x5f, 0x54, 0x42, 0x4e, 0x20, 0x3a, 0x20, 0x54, 0x41, 0x4e, 0x47, 0x45, // x3 v_TBN : TANGE
	0x4e, 0x54, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, // NT;.float4 v_col
	0x6f, 0x72, 0x30, 0x20, 0x3a, 0x20, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x30, 0x3b, 0x0a, 0x66, 0x6c, // or0 : COLOR0;.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, // oat3 v_positionW
	0x6f, 0x72, 0x6c, 0x64, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x31, // orld : TEXCOORD1
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // ;.float2 v_texco
	0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, // ord0 : TEXCOORD0
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, // ;.};.float intBi
	0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, // tsToFloat(int _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, // ) { return asflo
	0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // at(_x); }.float2
	0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  intBitsToFloat(
	0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // uint2 _x) { retu
	0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, // rn asfloat(_x); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, // }.float3 intBits
	0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, // ToFloat(uint3 _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, // ) { return asflo
	0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // at(_x); }.float4
	0x20, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, //  intBitsToFloat(
	0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // uint4 _x) { retu
	0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, // rn asfloat(_x); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, // }.float uintBits
	0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, // ToFloat(uint _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, //  { return asfloa
	0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // t(_x); }.float2 
	0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, // uintBitsToFloat(
	0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // uint2 _x) { retu
	0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, // rn asfloat(_x); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, // }.float3 uintBit
	0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, // sToFloat(uint3 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, // x) { return asfl
	0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oat(_x); }.float
	0x34, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, // 4 uintBitsToFloa
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(uint4 _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, // turn asfloat(_x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, // ; }.uint floatBi
	0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // tsToUint(float _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, // x) { return asui
	0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, // nt(_x); }.uint2 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, // floatBitsToUint(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float2 _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, // urn asuint(_x); 
	0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, // }.uint3 floatBit
	0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // sToUint(float3 _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, // x) { return asui
	0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, // nt(_x); }.uint4 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, // floatBitsToUint(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float4 _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, // urn asuint(_x); 
	0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, // }.int floatBitsT
	0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // oInt(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, //  return asint(_x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, // ); }.int2 floatB
	0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // itsToInt(float2 
	0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, // _x) { return asi
	0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, // nt(_x); }.int3 f
	0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, // loatBitsToInt(fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat3 _x) { retur
	0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, // n asint(_x); }.i
	0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, // nt4 floatBitsToI
	0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // nt(float4 _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, // return asint(_x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, // ; }.uint bitfiel
	0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, // dReverse(uint _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, // ) { return rever
	0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, // sebits(_x); }.ui
	0x6e, 0x74, 0x32, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, // nt2 bitfieldReve
	0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // rse(uint2 _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, // return reversebi
	0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, // ts(_x); }.uint3 
	0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, // bitfieldReverse(
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // uint3 _x) { retu
	0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, // rn reversebits(_
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x69, 0x74, 0x66, // x); }.uint4 bitf
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, // ieldReverse(uint
	0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, // 4 _x) { return r
	0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, // eversebits(_x); 
	0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, // }.uint packHalf2
	0x78, 0x31, 0x36, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, // x16(float2 _x).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, // .return (f32tof1
	0x36, 0x28, 0x5f, 0x78, 0x2e, 0x79, 0x29, 0x3c, 0x3c, 0x31, 0x36, 0x29, 0x20, 0x7c, 0x20, 0x66, // 6(_x.y)<<16) | f
	0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x7d, // 32tof16(_x.x);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, // .float2 unpackHa
	0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x0a, // lf2x16(uint _x).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // {.return float2(
	0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, 0x20, 0x26, 0x20, 0x30, 0x78, // f16tof32(_x & 0x
	0x66, 0x66, 0x66, 0x66, 0x29, 0x2c, 0x20, 0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, // ffff), f16tof32(
	0x5f, 0x78, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, // _x >> 16) );.}.s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // truct BgfxSample
	0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, // r2D.{.SamplerSta
	0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, // te m_sampler;.Te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // xture2D m_textur
	0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, // e;.};.struct Bgf
	0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, // xISampler2D.{.Te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x3c, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, // xture2D<int4> m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, // texture;.};.stru
	0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // ct BgfxUSampler2
	0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x3c, 0x75, 0x69, // D.{.Texture2D<ui
	0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, // nt4> m_texture;.
	0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // };.struct BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x0a, 0x7b, 0x0a, 0x53, // mpler2DArray.{.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, // amplerState m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // mpler;.Texture2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, // Array m_texture;
	0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, // .};.struct BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, // ampler2DShadow.{
	0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, // .SamplerComparis
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // onState m_sample
	0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, // r;.Texture2D m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // exture;.};.struc
	0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, // t BgfxSampler2DA
	0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, // rrayShadow.{.Sam
	0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, // plerComparisonSt
	0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, // ate m_sampler;.T
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, 0x5f, // exture2DArray m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, // texture;.};.stru
	0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, // ct BgfxSampler3D
	0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, // .{.SamplerState 
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, // m_sampler;.Textu
	0x72, 0x65, 0x33, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, // re3D m_texture;.
	0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, // };.struct BgfxIS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, // ampler3D.{.Textu
	0x72, 0x65, 0x33, 0x44, 0x3c, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, // re3D<int4> m_tex
	0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // ture;.};.struct 
	0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, // BgfxUSampler3D.{
	0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, // .Texture3D<uint4
	0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // > m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // struct BgfxSampl
	0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // erCube.{.Sampler
	0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, // State m_sampler;
	0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, // .TextureCube m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // exture;.};.struc
	0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, // t BgfxSamplerCub
	0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // eShadow.{.Sample
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, // rComparisonState
	0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, //  m_sampler;.Text
	0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ureCube m_textur
	0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, // e;.};.struct Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, 0x53, 0x0a, 0x7b, 0x0a, 0x54, // xSampler2DMS.{.T
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4d, 0x53, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, // exture2DMS<float
	0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, // 4> m_texture;.};
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ure2D(BgfxSample
	0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r2D _sampler, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat2 _coord).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // _texture.Sample(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // er, _coord);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // loat4 bgfxTextur
	0x65, 0x32, 0x44, 0x42, 0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // e2DBias(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, // float2 _coord, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // loat _bias).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, // texture.SampleBi
	0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // as(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // bias);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, // bgfxTexture2DLod
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, // (BgfxSampler2D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // sampler, float2 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, // _coord, float _l
	0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // evel).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, // e.SampleLevel(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, // , _coord, _level
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, // Texture2DLodOffs
	0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // et(BgfxSampler2D
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 2 _coord, float 
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, // _level, int2 _of
	0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // fset).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, // e.SampleLevel(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, // , _coord, _level
	0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // , _offset);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // 2DProj(BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, // er2D _sampler, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // loat3 _coord).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, // float2 coord = _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, // coord.xy * rcp(_
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // coord.z);.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ure.Sample(_samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, // ler.m_sampler, c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oord);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // bgfxTexture2DPro
	0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // j(BgfxSampler2D 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // _sampler, float4
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _coord).{.float
	0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // 2 coord = _coord
	0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // .xy * rcp(_coord
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // .w);.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, // pler.m_texture.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // ample(_sampler.m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // _sampler, coord)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, // ;.}.float4 bgfxT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x28, 0x42, 0x67, 0x66, // exture2DGrad(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler2D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float2 _coo
	0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x78, // rd, float2 _dPdx
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x79, 0x29, 0x0a, // , float2 _dPdy).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // {.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, // r.m_texture.Samp
	0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // leGrad(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x2c, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x79, 0x29, // d, _dPdx, _dPdy)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, // ;.}.float4 bgfxT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x28, 0x42, 0x67, // exture2DArray(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, // fxSampler2DArray
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 _coord).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, // xture.Sample(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // mpler.m_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  _coord);.}.floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // t4 bgfxTexture2D
	0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // ArrayLod(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, // pler2DArray _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // pler, float3 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, // ord, float _lod)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, // er.m_texture.Sam
	0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // pleLevel(_sample
	0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // r.m_sampler, _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // ord, _lod);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, // 2DArrayLodOffset
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, // (BgfxSampler2DAr
	0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // ray _sampler, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat3 _coord, flo
	0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, // at _level, int2 
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // _offset).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, // ture.SampleLevel
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, // ler, _coord, _le
	0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, 0x0a, 0x7d, // vel, _offset);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, // .float bgfxShado
	0x77, 0x32, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // w2D(BgfxSampler2
	0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // DShadow _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // , float3 _coord)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, // er.m_texture.Sam
	0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, // pleCmpLevelZero(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x5f, // er, _coord.xy, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // coord.z);.}.floa
	0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, // t bgfxShadow2DPr
	0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // oj(BgfxSampler2D
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // Shadow _sampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, //  float4 _coord).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, // {.float3 coord =
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x72, 0x63, //  _coord.xyz * rc
	0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // p(_coord.w);.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, // exture.SampleCmp
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // LevelZero(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, // er.m_sampler, co
	0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, // ord.xy, coord.z)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, // ;.}.float4 bgfxS
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x28, 0x42, 0x67, 0x66, // hadow2DArray(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, // xSampler2DArrayS
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // hadow _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, // float4 _coord).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, // eCmpLevelZero(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, // , _coord.xyz, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oord.w);.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, // 4 bgfxTexture3D(
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, // BgfxSampler3D _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // ampler, float3 _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // coord).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // re.Sample(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oord);.}.float4 
	0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x4c, 0x6f, 0x64, // bgfxTexture3DLod
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, // (BgfxSampler3D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // sampler, float3 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, // _coord, float _l
	0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // evel).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, // e.SampleLevel(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, // , _coord, _level
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // );.}.int4 bgfxTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, // xture3D(BgfxISam
	0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // pler3D _sampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, //  float3 _coord).
	0x7b, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x5f, 0x73, // {.uint3 size;._s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x73, // .GetDimensions(s
	0x69, 0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x79, 0x2c, 0x20, 0x73, // ize.x, size.y, s
	0x69, 0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // ize.z);.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, // e.Load(int4(_coo
	0x72, 0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, 0x30, 0x29, 0x20, 0x29, 0x3b, // rd * size, 0) );
	0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // .}.uint4 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, // ture3D(BgfxUSamp
	0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler3D _sampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, // float3 _coord).{
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, // .uint3 size;._sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, // GetDimensions(si
	0x7a, 0x65, 0x2e, 0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, // ze.x, size.y, si
	0x7a, 0x65, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // ze.z);.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // .Load(int4(_coor
	0x64, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, // d * size, 0) );.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // tureCube(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // plerCube _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float3 _coord
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // mple(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, // sampler, _coord)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, // ;.}.float4 bgfxT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x42, // extureCubeBias(B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, // gfxSamplerCube _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // sampler, float3 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, // _coord, float _b
	0x69, 0x61, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // ias).{.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, // .SampleBias(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, // _coord, _bias);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, // tureCubeLod(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, // SamplerCube _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, // pler, float3 _co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, // ord, float _leve
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // l).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, // pler.m_texture.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ampleLevel(_samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // ler.m_sampler, _
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, // coord, _level);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, // }.float bgfxShad
	0x6f, 0x77, 0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // owCube(BgfxSampl
	0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, // erCubeShadow _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, // mpler, float4 _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // oord).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, // e.SampleCmpLevel
	0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // Zero(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, // sampler, _coord.
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // xyz, _coord.w);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // elFetch(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // int2 _coord, int
	0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _lod).{.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, // re.Load(int3(_co
	0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ord, _lod) );.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, // float4 bgfxTexel
	0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, // FetchOffset(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // Sampler2D _sampl
	0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // er, int2 _coord,
	0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, //  int _lod, int2 
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // _offset).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, // ture.Load(int3(_
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x2c, 0x20, 0x5f, 0x6f, // coord, _lod), _o
	0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ffset );.}.float
	0x32, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, // 2 bgfxTextureSiz
	0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // e(BgfxSampler2D 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, // _sampler, int _l
	0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x72, 0x65, 0x73, // od).{.float2 res
	0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // ult;._sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, // texture.GetDimen
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, // sions(result.x, 
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // result.y);.retur
	0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // n result;.}.floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, // t4 bgfxTextureGa
	0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ther(BgfxSampler
	0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // 2D _sampler, flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // at2 _coord).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, // texture.GatherRe
	0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // d(_sampler.m_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x29, 0x3b, 0x0a, // pler, _coord );.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, // }.float4 bgfxTex
	0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, // tureGatherOffset
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, // (BgfxSampler2D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // sampler, float2 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, // _coord, int2 _of
	0x66, 0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // fset).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, // e.GatherRed(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, // _coord, _offset 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, // TextureGather(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, // fxSampler2DArray
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 3 _coord).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, // xture.GatherRed(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _sampler.m_sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // er, _coord );.}.
	0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, // int4 bgfxTexelFe
	0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // tch(BgfxISampler
	0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, // 2D _sampler, int
	0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, // 2 _coord, int _l
	0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // od).{.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // Load(int3(_coord
	0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, // , _lod) );.}.uin
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, // t4 bgfxTexelFetc
	0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // h(BgfxUSampler2D
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, //  _sampler, int2 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, // _coord, int _lod
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, // ler.m_texture.Lo
	0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, // ad(int3(_coord, 
	0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _lod) );.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, // 4 bgfxTexelFetch
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, 0x53, // (BgfxSampler2DMS
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, //  _sampler, int2 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x73, 0x61, 0x6d, // _coord, int _sam
	0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // pleIdx).{.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // ure.Load(_coord,
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  _sampleIdx);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, // float4 bgfxTexel
	0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Fetch(BgfxSample
	0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // r2DArray _sample
	0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, // r, int3 _coord, 
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // int _lod).{.retu
	0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, // rn _sampler.m_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, // xture.Load(int4(
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, // _coord, _lod) );
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, // .}.float4 bgfxTe
	0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // xelFetch(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // pler3D _sampler,
	0x20, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, //  int3 _coord, in
	0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // t _lod).{.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, // ure.Load(int4(_c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // oord, _lod) );.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float3 bgfxText
	0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // ureSize(BgfxSamp
	0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler3D _sampler, 
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // int _lod).{.floa
	0x74, 0x33, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, // t3 result;._samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, // ler.m_texture.Ge
	0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, 0x75, // tDimensions(resu
	0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x79, 0x2c, 0x20, // lt.x, result.y, 
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // result.z);.retur
	0x6e, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // n result;.}.floa
	0x74, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t3 instMul(float
	0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, // 3 _vec, float3x3
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  _mtx) { return 
	0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x3b, // mul(_mtx, _vec);
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, //  }.float3 instMu
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, // l(float3x3 _mtx,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, //  float3 _vec) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x2c, // return mul(_vec,
	0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  _mtx); }.float4
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, //  instMul(float4 
	0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, // _vec, float4x4 _
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, // mtx) { return mu
	0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, // l(_mtx, _vec); }
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, // .float4 instMul(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, // float4x4 _mtx, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // loat4 _vec) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, // turn mul(_vec, _
	0x6d, 0x74, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, // mtx); }.bool2 le
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, // ssThan(float2 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float2 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // eturn _a < _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, // .bool3 lessThan(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float3 _a, float
	0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 3 _b) { return _
	0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, // a < _b; }.bool4 
	0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // lessThan(float4 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, // _a, float4 _b) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, //  return _a < _b;
	0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, //  }.bool2 lessTha
	0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, // nEqual(float2 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float2 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, // eturn _a <= _b; 
	0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, // }.bool3 lessThan
	0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, // Equal(float3 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float3 _b) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, // turn _a <= _b; }
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, // .bool4 lessThanE
	0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, // qual(float4 _a, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float4 _b) { ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, // urn _a <= _b; }.
	0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, // bool2 greaterTha
	0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // n(float2 _a, flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at2 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, //  _a > _b; }.bool
	0x33, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, // 3 greaterThan(fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // oat3 _a, float3 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x67, 0x72, // > _b; }.bool4 gr
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // eaterThan(float4
	0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, //  _a, float4 _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, // { return _a > _b
	0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, // ; }.bool2 greate
	0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rThanEqual(float
	0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, // 2 _a, float2 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, //  { return _a >= 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, 0x72, 0x65, 0x61, // _b; }.bool3 grea
	0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, // terThanEqual(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // at3 _a, float3 _
	0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, // b) { return _a >
	0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x67, 0x72, // = _b; }.bool4 gr
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, // eaterThanEqual(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _a, float4
	0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, //  _b) { return _a
	0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, //  >= _b; }.bool2 
	0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // notEqual(float2 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, // _a, float2 _b) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, //  return _a != _b
	0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, // ; }.bool3 notEqu
	0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // al(float3 _a, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat3 _b) { retur
	0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, // n _a != _b; }.bo
	0x6f, 0x6c, 0x34, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, // ol4 notEqual(flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // at4 _a, float4 _
	0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, // b) { return _a !
	0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x65, 0x71, // = _b; }.bool2 eq
	0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, // ual(float2 _a, f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat2 _b) { retu
	0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // rn _a == _b; }.b
	0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ool3 equal(float
	0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, // 3 _a, float3 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, //  { return _a == 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x65, 0x71, 0x75, 0x61, // _b; }.bool4 equa
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float4 _a, flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at4 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  _a == _b; }.flo
	0x61, 0x74, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x2c, // at mix(float _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  float _b, float
	0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, //  _t) { return le
	0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, // rp(_a, _b, _t); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, // }.float2 mix(flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, // at2 _a, float2 _
	0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, // b, float2 _t) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, // return lerp(_a, 
	0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _b, _t); }.float
	0x33, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, // 3 mix(float3 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  float3 _b, floa
	0x74, 0x33, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t3 _t) { return 
	0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, // lerp(_a, _b, _t)
	0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, // ; }.float4 mix(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _a, float4
	0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x74, 0x29, 0x20, //  _b, float4 _t) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, // { return lerp(_a
	0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // , _b, _t); }.flo
	0x61, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x2c, // at mod(float _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, //  float _b) { ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, // urn _a - _b * fl
	0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // oor(_a / _b); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 mod(float
	0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, // 2 _a, float2 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, //  { return _a - _
	0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, // b * floor(_a / _
	0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x6f, 0x64, // b); }.float3 mod
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (float3 _a, floa
	0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t3 _b) { return 
	0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, // _a - _b * floor(
	0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _a / _b); }.floa
	0x74, 0x34, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, // t4 mod(float4 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float4 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, // eturn _a - _b * 
	0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, // floor(_a / _b); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, // }.float2 vec2_sp
	0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // lat(float _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x78, // return float2(_x
	0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // , _x); }.float3 
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec3_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, //  _x) { return fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // oat3(_x, _x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, // ; }.float4 vec4_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // splat(float _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // { return float4(
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, // _x, _x, _x, _x);
	0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, //  }.uint2 uvec2_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // plat(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, // return uint2(_x,
	0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x75, 0x76, //  _x); }.uint3 uv
	0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, // ec3_splat(uint _
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, // x) { return uint
	0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // 3(_x, _x, _x); }
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, // .uint4 uvec4_spl
	0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // at(uint _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, // turn uint4(_x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // x, _x, _x); }.fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, // oat4x4 mtxFromRo
	0x77, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, // ws(float4 _0, fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _1, float4 
	0x5f, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, // _2, float4 _3).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // .return float4x4
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, // (_0, _1, _2, _3)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, // ;.}.float4x4 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // FromCols(float4 
	0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, // _0, float4 _1, f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _2, float4
	0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, //  _3).{.return tr
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // anspose(float4x4
	0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, // (_0, _1, _2, _3)
	0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, //  );.}.float3x3 m
	0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // txFromRows(float
	0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, // 3 _0, float3 _1,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, //  float3 _2).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, // turn float3x3(_0
	0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // , _1, _2);.}.flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, // at3x3 mtxFromCol
	0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // s(float3 _0, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // at3 _1, float3 _
	0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, // 2).{.return tran
	0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x5f, // spose(float3x3(_
	0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 0, _1, _2) );.}.
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // static float4 u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // viewRect;.static
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, //  float4 u_viewTe
	0x78, 0x65, 0x6c, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, // xel;.static floa
	0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, // t4x4 u_view;.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, // tic float4x4 u_i
	0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, // nvView;.static f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // loat4x4 u_proj;.
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, // static float4x4 
	0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, // u_invProj;.stati
	0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // c float4x4 u_vie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // wProj;.static fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, // oat4x4 u_invView
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, // Proj;.static flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, // at4x4 u_model[32
	0x5d, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ];.static float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, // x4 u_modelView;.
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, // static float4x4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, // u_modelViewProj;
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // .static float4 u
	0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _alphaRef4;.floa
	0x74, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, // t4 encodeRE8(flo
	0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, // at _r).{.float e
	0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, // xponent = ceil(l
	0x6f, 0x67, 0x32, 0x28, 0x5f, 0x72, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // og2(_r) );.retur
	0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x72, 0x20, 0x2f, 0x20, 0x65, 0x78, // n float4(_r / ex
	0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x2c, 0x20, 0x30, // p2(exponent)., 0
	0x2e, 0x30, 0x0a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, 0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, // .0., 0.0., (expo
	0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, // nent + 128.0) / 
	0x32, 0x35, 0x35, 0x2e, 0x30, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 255.0.);.}.float
	0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  decodeRE8(float
	0x34, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 4 _re8).{.float 
	0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x2e, // exponent = _re8.
	0x77, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, // w * 255.0 - 128.
	0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x2e, 0x78, // 0;.return _re8.x
	0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, //  * exp2(exponent
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, // );.}.float4 enco
	0x64, 0x65, 0x52, 0x47, 0x42, 0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // deRGBE8(float3 _
	0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x72, 0x67, // rgb).{.float4 rg
	0x62, 0x65, 0x38, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x61, 0x78, 0x43, 0x6f, // be8;.float maxCo
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, // mponent = max(ma
	0x78, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x79, // x(_rgb.x, _rgb.y
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // ), _rgb.z);.floa
	0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, // t exponent = cei
	0x6c, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, // l(log2(maxCompon
	0x65, 0x6e, 0x74, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, // ent) );.rgbe8.xy
	0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, // z = _rgb / exp2(
	0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, // exponent);.rgbe8
	0x2e, 0x77, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, // .w = (exponent +
	0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x3b, //  128.0) / 255.0;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x65, 0x38, 0x3b, 0x0a, 0x7d, // .return rgbe8;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x47, // .float3 decodeRG
	0x42, 0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, // BE8(float4 _rgbe
	0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, // 8).{.float expon
	0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, // ent = _rgbe8.w *
	0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, //  255.0 - 128.0;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, // float3 rgb = _rg
	0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, // be8.xyz * exp2(e
	0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // xponent);.return
	0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x65, //  rgb;.}.float3 e
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, // ncodeNormalUint(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, // float3 _normal).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // {.return _normal
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x7d, 0x0a, //  * 0.5 + 0.5;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, // float3 decodeNor
	0x6d, 0x61, 0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // malUint(float3 _
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // encodedNormal).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // .return _encoded
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, // Normal * 2.0 - 1
	0x2e, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x65, 0x6e, 0x63, // .0;.}.float2 enc
	0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, // odeNormalSphereM
	0x61, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ap(float3 _norma
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // l).{.return norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, // alize(_normal.xy
	0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ) * sqrt(_normal
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x3b, // .z * 0.5 + 0.5);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, // .}.float3 decode
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, // NormalSphereMap(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, // float2 _encodedN
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x7a, // ormal).{.float z
	0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // z = dot(_encoded
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // Normal, _encoded
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, // Normal) * 2.0 - 
	0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 1.0;.return floa
	0x74, 0x33, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x65, 0x6e, // t3(normalize(_en
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, // codedNormal.xy) 
	0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x7a, 0x7a, 0x2a, // * sqrt(1.0 - zz*
	0x7a, 0x7a, 0x29, 0x2c, 0x20, 0x7a, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // zz), zz);.}.floa
	0x74, 0x32, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, // t2 octahedronWra
	0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // p(float2 _val).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, // .return (1.0 - a
	0x62, 0x73, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x2e, 0x79, 0x78, 0x29, 0x20, 0x29, 0x0a, 0x2a, 0x20, // bs(_val.yx) ).* 
	0x6d, 0x69, 0x78, 0x28, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x2d, // mix(vec2_splat(-
	0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // 1.0), vec2_splat
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x67, 0x72, // (1.0), float2(gr
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, // eaterThanEqual(_
	0x76, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, // val.xy, vec2_spl
	0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // at(0.0) ) ) );.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, // .float2 encodeNo
	0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x66, // rmalOctahedron(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // loat3 _normal).{
	0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2f, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // ._normal /= abs(
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, // _normal.x) + abs
	0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, // (_normal.y) + ab
	0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x5f, 0x6e, // s(_normal.z);._n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ormal.xy = _norm
	0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x5f, 0x6e, // al.z >= 0.0 ? _n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, // ormal.xy : octah
	0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // edronWrap(_norma
	0x6c, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, // l.xy);._normal.x
	0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x2a, // y = _normal.xy *
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, //  0.5 + 0.5;.retu
	0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, // rn _normal.xy;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, // .float3 decodeNo
	0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x66, // rmalOctahedron(f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, // loat2 _encodedNo
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // rmal).{._encoded
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // Normal = _encode
	0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, // dNormal * 2.0 - 
	0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // 1.0;.float3 norm
	0x61, 0x6c, 0x3b, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x31, // al;.normal.z = 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // .0 - abs(_encode
	0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, // dNormal.x) - abs
	0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // (_encodedNormal.
	0x79, 0x29, 0x3b, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, // y);.normal.xy = 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, // normal.z >= 0.0 
	0x3f, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ? _encodedNormal
	0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, // .xy : octahedron
	0x57, 0x72, 0x61, 0x70, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, // Wrap(_encodedNor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // mal.xy);.return 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // normalize(normal
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, // );.}.float3 conv
	0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ertRGB2XYZ(float
	0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 3 _rgb).{.float3
	0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, //  xyz;.xyz.x = do
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x34, 0x31, 0x32, 0x34, 0x35, // t(float3(0.41245
	0x36, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x37, 0x35, 0x37, 0x36, 0x31, 0x2c, 0x20, 0x30, // 64, 0.3575761, 0
	0x2e, 0x31, 0x38, 0x30, 0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // .1804375), _rgb)
	0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, // ;.xyz.y = dot(fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, // oat3(0.2126729, 
	0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, // 0.7151522, 0.072
	0x31, 0x37, 0x35, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x78, 0x79, // 1750), _rgb);.xy
	0x7a, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // z.z = dot(float3
	0x28, 0x30, 0x2e, 0x30, 0x31, 0x39, 0x33, 0x33, 0x33, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, // (0.0193339, 0.11
	0x39, 0x31, 0x39, 0x32, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, 0x30, 0x33, 0x30, 0x34, 0x31, // 91920, 0.9503041
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ), _rgb);.return
	0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, //  xyz;.}.float3 c
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x66, 0x6c, // onvertXYZ2RGB(fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // oat3 _xyz).{.flo
	0x61, 0x74, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, // at3 rgb;.rgb.x =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x20, 0x33, 0x2e, 0x32, //  dot(float3( 3.2
	0x34, 0x30, 0x34, 0x35, 0x34, 0x32, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x33, 0x37, 0x31, 0x33, // 404542, -1.53713
	0x38, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x35, 0x33, 0x31, 0x34, 0x29, 0x2c, // 85, -0.4985314),
	0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, //  _xyz);.rgb.y = 
	0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x39, 0x36, // dot(float3(-0.96
	0x39, 0x32, 0x36, 0x36, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x38, 0x37, 0x36, 0x30, 0x31, 0x30, 0x38, // 92660, 1.8760108
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x31, 0x35, 0x35, 0x36, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x78, // , 0.0415560), _x
	0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // yz);.rgb.z = dot
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x36, 0x34, // (float3( 0.05564
	0x33, 0x34, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x30, 0x34, 0x30, 0x32, 0x35, 0x39, 0x2c, 0x20, // 34, -0.2040259, 
	0x31, 0x2e, 0x30, 0x35, 0x37, 0x32, 0x32, 0x35, 0x32, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, // 1.0572252), _xyz
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, // );.return rgb;.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, // .float3 convertX
	0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, // YZ2Yxy(float3 _x
	0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x20, // yz).{.float inv 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2c, 0x20, // = 1.0/dot(_xyz, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, // float3(1.0, 1.0,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, //  1.0) );.return 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x2c, 0x20, 0x5f, // float3(_xyz.y, _
	0x78, 0x79, 0x7a, 0x2e, 0x78, 0x2a, 0x69, 0x6e, 0x76, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x2e, // xyz.x*inv, _xyz.
	0x79, 0x2a, 0x69, 0x6e, 0x76, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // y*inv);.}.float3
	0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x58, 0x59, 0x5a, 0x28, //  convertYxy2XYZ(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x66, // float3 _Yxy).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, // loat3 xyz;.xyz.x
	0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, //  = _Yxy.x*_Yxy.y
	0x2f, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, // /_Yxy.z;.xyz.y =
	0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, //  _Yxy.x;.xyz.z =
	0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, //  _Yxy.x*(1.0 - _
	0x59, 0x78, 0x79, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x29, 0x2f, // Yxy.y - _Yxy.z)/
	0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, // _Yxy.z;.return x
	0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, // yz;.}.float3 con
	0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x78, 0x79, 0x28, 0x66, 0x6c, 0x6f, 0x61, // vertRGB2Yxy(floa
	0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // t3 _rgb).{.retur
	0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, // n convertXYZ2Yxy
	0x28, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, // (convertRGB2XYZ(
	0x5f, 0x72, 0x67, 0x62, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _rgb) );.}.float
	0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x52, 0x47, 0x42, // 3 convertYxy2RGB
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, // (float3 _Yxy).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, // return convertXY
	0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, // Z2RGB(convertYxy
	0x32, 0x58, 0x59, 0x5a, 0x28, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 2XYZ(_Yxy) );.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, // float3 convertRG
	0x42, 0x32, 0x59, 0x75, 0x76, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, // B2Yuv(float3 _rg
	0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x79, 0x75, 0x76, 0x3b, // b).{.float3 yuv;
	0x0a, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, // .yuv.x = dot(_rg
	0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, // b, float3(0.299,
	0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x29, 0x20, 0x29, //  0.587, 0.114) )
	0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, // ;.yuv.y = (_rgb.
	0x78, 0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, 0x2a, 0x30, 0x2e, 0x37, 0x31, 0x33, // x - yuv.x)*0.713
	0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x20, 0x3d, 0x20, //  + 0.5;.yuv.z = 
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, // (_rgb.z - yuv.x)
	0x2a, 0x30, 0x2e, 0x35, 0x36, 0x34, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, // *0.564 + 0.5;.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // turn yuv;.}.floa
	0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x75, 0x76, 0x32, 0x52, 0x47, // t3 convertYuv2RG
	0x42, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x29, 0x0a, 0x7b, // B(float3 _yuv).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, // .float3 rgb;.rgb
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, // .x = _yuv.x + 1.
	0x34, 0x30, 0x33, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, 0x35, 0x29, // 403*(_yuv.y-0.5)
	0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, // ;.rgb.y = _yuv.x
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x33, 0x34, 0x34, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, //  - 0.344*(_yuv.y
	0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x34, 0x2a, 0x28, 0x5f, // -0.5) - 0.714*(_
	0x79, 0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, // yuv.z-0.5);.rgb.
	0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, // z = _yuv.x + 1.7
	0x37, 0x33, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, // 73*(_yuv.z-0.5);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // .return rgb;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, // loat3 convertRGB
	0x32, 0x59, 0x49, 0x51, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, // 2YIQ(float3 _rgb
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, // ).{.float3 yiq;.
	0x79, 0x69, 0x71, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // yiq.x = dot(floa
	0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, // t3(0.299, 0.587,
	0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x20, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, //  0.114 ), _rgb);
	0x0a, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, // .yiq.y = dot(flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x39, 0x35, 0x37, 0x31, 0x36, 0x2c, 0x20, 0x2d, 0x30, // at3(0.595716, -0
	0x2e, 0x32, 0x37, 0x34, 0x34, 0x35, 0x33, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x33, 0x32, 0x31, 0x32, // .274453, -0.3212
	0x36, 0x33, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, // 63), _rgb);.yiq.
	0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, // z = dot(float3(0
	0x2e, 0x32, 0x31, 0x31, 0x34, 0x35, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x32, 0x32, 0x35, // .211456, -0.5225
	0x39, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x33, 0x35, 0x29, 0x2c, 0x20, 0x5f, // 91, 0.311135), _
	0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x79, 0x69, 0x71, // rgb);.return yiq
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, // ;.}.float3 conve
	0x72, 0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, 0x42, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // rtYIQ2RGB(float3
	0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //  _yiq).{.float3 
	0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // rgb;.rgb.x = dot
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, // (float3(1.0, 0.9
	0x35, 0x36, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x32, 0x31, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x79, // 563, 0.6210), _y
	0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // iq);.rgb.y = dot
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // (float3(1.0, -0.
	0x32, 0x37, 0x32, 0x31, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x36, 0x34, 0x37, 0x34, 0x29, 0x2c, 0x20, // 2721, -0.6474), 
	0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, // _yiq);.rgb.z = d
	0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, // ot(float3(1.0, -
	0x31, 0x2e, 0x31, 0x30, 0x37, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x37, 0x30, 0x34, 0x36, 0x29, 0x2c, // 1.1070, 1.7046),
	0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, //  _yiq);.return r
	0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x6f, 0x4c, // gb;.}.float3 toL
	0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, // inear(float3 _rg
	0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, // b).{.return pow(
	0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // abs(_rgb), vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // splat(2.2) );.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, // float4 toLinear(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, // float4 _rgba).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, // return float4(to
	0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, // Linear(_rgba.xyz
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // ), _rgba.w);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, // loat3 toLinearAc
	0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, // curate(float3 _r
	0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6c, 0x6f, 0x20, // gb).{.float3 lo 
	0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, // = _rgb / 12.92;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, // float3 hi = pow(
	0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, //  (_rgb + 0.055) 
	0x2f, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // / 1.055, vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // lat(2.4) );.floa
	0x74, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, // t3 rgb = mix(hi,
	0x20, 0x6c, 0x6f, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x6c, 0x65, 0x73, 0x73, //  lo, float3(less
	0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, // ThanEqual(_rgb, 
	0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x34, 0x30, // vec3_splat(0.040
	0x34, 0x35, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 45) ) ) );.retur
	0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // n rgb;.}.float4 
	0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, // toLinearAccurate
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, // (float4 _rgba).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, // .return float4(t
	0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, // oLinearAccurate(
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // _rgba.xyz), _rgb
	0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6f, // a.w);.}.float to
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, // Gamma(float _r).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, // {.return pow(abs
	0x28, 0x5f, 0x72, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x3b, 0x0a, // (_r), 1.0/2.2);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, // }.float3 toGamma
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // (float3 _rgb).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, // return pow(abs(_
	0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // rgb), vec3_splat
	0x28, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // (1.0/2.2) );.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x66, 0x6c, // loat4 toGamma(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // oat4 _rgba).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, // turn float4(toGa
	0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, // mma(_rgba.xyz), 
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _rgba.w);.}.floa
	0x74, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, // t3 toGammaAccura
	0x74, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, // te(float3 _rgb).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6c, 0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, // {.float3 lo = _r
	0x67, 0x62, 0x20, 0x2a, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // gb * 12.92;.floa
	0x74, 0x33, 0x20, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, // t3 hi = pow(abs(
	0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // _rgb), vec3_spla
	0x74, 0x28, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x31, // t(1.0/2.4) ) * 1
	0x2e, 0x30, 0x35, 0x35, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x66, 0x6c, // .055 - 0.055;.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, // oat3 rgb = mix(h
	0x69, 0x2c, 0x20, 0x6c, 0x6f, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x6c, 0x65, // i, lo, float3(le
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, // ssThanEqual(_rgb
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, // , vec3_splat(0.0
	0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, // 031308) ) ) );.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // eturn rgb;.}.flo
	0x61, 0x74, 0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, // at4 toGammaAccur
	0x61, 0x74, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, // ate(float4 _rgba
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ).{.return float
	0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, // 4(toGammaAccurat
	0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, // e(_rgba.xyz), _r
	0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // gba.w);.}.float3
	0x20, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  toReinhard(floa
	0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // t3 _rgb).{.retur
	0x6e, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2f, 0x28, // n toGamma(_rgb/(
	0x5f, 0x72, 0x67, 0x62, 0x2b, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // _rgb+vec3_splat(
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 1.0) ) );.}.floa
	0x74, 0x34, 0x20, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x66, 0x6c, // t4 toReinhard(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // oat4 _rgba).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, 0x52, 0x65, // turn float4(toRe
	0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, // inhard(_rgba.xyz
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // ), _rgba.w);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x66, // loat3 toFilmic(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x72, // loat3 _rgb).{._r
	0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, // gb = max(vec3_sp
	0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2d, // lat(0.0), _rgb -
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x29, 0x3b, 0x0a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, //  0.004);._rgb = 
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, // (_rgb*(6.2*_rgb 
	0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, // + 0.5) ) / (_rgb
	0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, // *(6.2*_rgb + 1.7
	0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ) + 0.06);.retur
	0x6e, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // n _rgb;.}.float4
	0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  toFilmic(float4
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  _rgba).{.return
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, //  float4(toFilmic
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, // (_rgba.xyz), _rg
	0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // ba.w);.}.float3 
	0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x66, 0x6c, 0x6f, // toAcesFilmic(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // at3 _rgb).{.floa
	0x74, 0x20, 0x61, 0x61, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x35, 0x31, 0x66, 0x3b, 0x0a, 0x66, 0x6c, // t aa = 2.51f;.fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x62, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x66, 0x3b, 0x0a, // oat bb = 0.03f;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x63, 0x63, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x34, 0x33, 0x66, // float cc = 2.43f
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x64, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, // ;.float dd = 0.5
	0x39, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x65, 0x20, 0x3d, 0x20, 0x30, // 9f;.float ee = 0
	0x2e, 0x31, 0x34, 0x66, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x74, // .14f;.return sat
	0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x61, 0x61, // urate( (_rgb*(aa
	0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x62, 0x62, 0x29, 0x20, 0x29, 0x2f, 0x28, 0x5f, // *_rgb + bb) )/(_
	0x72, 0x67, 0x62, 0x2a, 0x28, 0x63, 0x63, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x64, // rgb*(cc*_rgb + d
	0x64, 0x29, 0x20, 0x2b, 0x20, 0x65, 0x65, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // d) + ee) );.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, // oat4 toAcesFilmi
	0x63, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, // c(float4 _rgba).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // {.return float4(
	0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, // toAcesFilmic(_rg
	0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // ba.xyz), _rgba.w
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6c, 0x75, 0x6d, 0x61, // );.}.float3 luma
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // (float3 _rgb).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, // float yy = dot(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, // loat3(0.2126729,
	0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, //  0.7151522, 0.07
	0x32, 0x31, 0x37, 0x35, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, // 21750), _rgb);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // eturn vec3_splat
	0x28, 0x79, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6c, // (yy);.}.float4 l
	0x75, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, // uma(float4 _rgba
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ).{.return float
	0x34, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, // 4(luma(_rgba.xyz
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // ), _rgba.w);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, // loat3 conSatBri(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // float3 _rgb, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // at3 _csb).{.floa
	0x74, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, // t3 rgb = _rgb * 
	0x5f, 0x63, 0x73, 0x62, 0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, // _csb.z;.rgb = mi
	0x78, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, // x(luma(rgb), rgb
	0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, // , _csb.y);.rgb =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, //  mix(vec3_splat(
	0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, // 0.5), rgb, _csb.
	0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, // x);.return rgb;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, // }.float4 conSatB
	0x72, 0x69, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, // ri(float4 _rgba,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, //  float3 _csb).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x63, 0x6f, // return float4(co
	0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, // nSatBri(_rgba.xy
	0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, // z, _csb), _rgba.
	0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x70, 0x6f, 0x73, // w);.}.float3 pos
	0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, // terize(float3 _r
	0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, // gb, float _numCo
	0x6c, 0x6f, 0x72, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, // lors).{.return f
	0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, // loor(_rgb*_numCo
	0x6c, 0x6f, 0x72, 0x73, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, // lors) / _numColo
	0x72, 0x73, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x70, 0x6f, 0x73, // rs;.}.float4 pos
	0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, // terize(float4 _r
	0x67, 0x62, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, // gba, float _numC
	0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // olors).{.return 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, // float4(posterize
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x6e, 0x75, 0x6d, // (_rgba.xyz, _num
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // Colors), _rgba.w
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x73, 0x65, 0x70, 0x69, // );.}.float3 sepi
	0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, // a(float3 _rgb).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, // .float3 color;.c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, // olor.x = dot(_rg
	0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x39, 0x33, 0x2c, // b, float3(0.393,
	0x20, 0x30, 0x2e, 0x37, 0x36, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x39, 0x29, 0x20, 0x29, //  0.769, 0.189) )
	0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // ;.color.y = dot(
	0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x33, // _rgb, float3(0.3
	0x34, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x38, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x36, 0x38, // 49, 0.686, 0.168
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, // ) );.color.z = d
	0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // ot(_rgb, float3(
	0x30, 0x2e, 0x32, 0x37, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x33, 0x34, 0x2c, 0x20, 0x30, 0x2e, // 0.272, 0.534, 0.
	0x31, 0x33, 0x31, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // 131) );.return c
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x73, // olor;.}.float4 s
	0x65, 0x70, 0x69, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, // epia(float4 _rgb
	0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, // a).{.return floa
	0x74, 0x34, 0x28, 0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, // t4(sepia(_rgba.x
	0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, // yz), _rgba.w);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, // .float3 blendOve
	0x72, 0x6c, 0x61, 0x79, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x61, 0x73, // rlay(float3 _bas
	0x65, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, // e, float3 _blend
	0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6c, 0x74, 0x20, 0x3d, 0x20, // ).{.float3 lt = 
	0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x5f, 0x62, // 2.0 * _base * _b
	0x6c, 0x65, 0x6e, 0x64, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x67, 0x74, 0x65, // lend;.float3 gte
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x28, //  = 1.0 - 2.0 * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, // 1.0 - _base) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x72, // 1.0 - _blend);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x74, 0x2c, 0x20, 0x67, 0x74, // eturn mix(lt, gt
	0x65, 0x2c, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, // e, step(vec3_spl
	0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, // at(0.5), _base) 
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x6c, 0x65, 0x6e, // );.}.float4 blen
	0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // dOverlay(float4 
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, // _base, float4 _b
	0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, // lend).{.return f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, // loat4(blendOverl
	0x61, 0x79, 0x28, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x62, // ay(_base.xyz, _b
	0x6c, 0x65, 0x6e, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, // lend.xyz), _base
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x64, // .w);.}.float3 ad
	0x6a, 0x75, 0x73, 0x74, 0x48, 0x75, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // justHue(float3 _
	0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x68, 0x75, 0x65, 0x29, // rgb, float _hue)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x79, 0x69, 0x71, 0x20, 0x3d, 0x20, // .{.float3 yiq = 
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, 0x28, 0x5f, // convertRGB2YIQ(_
	0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, // rgb);.float angl
	0x65, 0x20, 0x3d, 0x20, 0x5f, 0x68, 0x75, 0x65, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, // e = _hue + atan2
	0x28, 0x79, 0x69, 0x71, 0x2e, 0x7a, 0x2c, 0x20, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // (yiq.z, yiq.y);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6c, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x6e, 0x67, // float len = leng
	0x74, 0x68, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // th(yiq.yz);.retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, // rn convertYIQ2RG
	0x42, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x78, 0x2c, 0x20, // B(float3(yiq.x, 
	0x6c, 0x65, 0x6e, 0x2a, 0x63, 0x6f, 0x73, 0x28, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x2c, 0x20, // len*cos(angle), 
	0x6c, 0x65, 0x6e, 0x2a, 0x73, 0x69, 0x6e, 0x28, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x20, 0x29, // len*sin(angle) )
	0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x70, 0x61, 0x63, //  );.}.float4 pac
	0x6b, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x54, 0x6f, 0x52, 0x67, 0x62, 0x61, 0x28, 0x66, 0x6c, 0x6f, // kFloatToRgba(flo
	0x61, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // at _value).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, // st float4 shift 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, // = float4(256 * 2
	0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, // 56 * 256, 256 * 
	0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 256, 256, 1.0);.
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x73, // const float4 mas
	0x6b, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x2e, // k = float4(0, 1.
	0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, // 0 / 256.0, 1.0 /
	0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, //  256.0, 1.0 / 25
	0x36, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x6f, 0x6d, // 6.0);.float4 com
	0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, // p = frac(_value 
	0x2a, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, // * shift);.comp -
	0x3d, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x2e, 0x78, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x6d, 0x61, // = comp.xxyz * ma
	0x73, 0x6b, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, // sk;.return comp;
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x52, // .}.float unpackR
	0x67, 0x62, 0x61, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // gbaToFloat(float
	0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, // 4 _rgba).{.const
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, //  float4 shift = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, // float4(1.0 / (25
	0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, // 6.0 * 256.0 * 25
	0x36, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, // 6.0), 1.0 / (256
	0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, // .0 * 256.0), 1.0
	0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, //  / 256.0, 1.0);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, // return dot(_rgba
	0x2c, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // , shift);.}.floa
	0x74, 0x32, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, // t2 packHalfFloat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, // (float _value).{
	0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x73, 0x68, // .const float2 sh
	0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x32, 0x35, 0x36, // ift = float2(256
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, // , 1.0);.const fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // oat2 mask = floa
	0x74, 0x32, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, // t2(0, 1.0 / 256.
	0x30, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x20, // 0);.float2 comp 
	0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, // = frac(_value * 
	0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, 0x3d, 0x20, // shift);.comp -= 
	0x63, 0x6f, 0x6d, 0x70, 0x2e, 0x78, 0x78, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, // comp.xx * mask;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // return comp;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, // loat unpackHalfF
	0x6c, 0x6f, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x72, 0x67, 0x29, // loat(float2 _rg)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // .{.const float2 
	0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, // shift = float2(1
	0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // .0 / 256.0, 1.0)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, // ;.return dot(_rg
	0x2c, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // , shift);.}.floa
	0x74, 0x20, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // t random(float2 
	0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x72, // _uv).{.return fr
	0x61, 0x63, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x75, 0x76, 0x2e, 0x78, // ac(sin(dot(_uv.x
	0x79, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x32, 0x2e, 0x39, 0x38, 0x39, // y, float2(12.989
	0x38, 0x2c, 0x20, 0x37, 0x38, 0x2e, 0x32, 0x33, 0x33, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x2a, // 8, 78.233) ) ) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  43758.5453);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x66, 0x69, 0x78, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, // float3 fixCubeLo
	0x6f, 0x6b, 0x75, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x2c, 0x20, // okup(float3 _v, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // float _lod, floa
	0x74, 0x20, 0x5f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, // t _topLevelCubeS
	0x69, 0x7a, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x78, 0x20, // ize).{.float ax 
	0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // = abs(_v.x);.flo
	0x61, 0x74, 0x20, 0x61, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x79, // at ay = abs(_v.y
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x62, // );.float az = ab
	0x73, 0x28, 0x5f, 0x76, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, // s(_v.z);.float v
	0x6d, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x78, // max = max(max(ax
	0x2c, 0x20, 0x61, 0x79, 0x29, 0x2c, 0x20, 0x61, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // , ay), az);.floa
	0x74, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // t scale = 1.0 - 
	0x65, 0x78, 0x70, 0x32, 0x28, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x74, 0x6f, // exp2(_lod) / _to
	0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x3b, 0x0a, // pLevelCubeSize;.
	0x69, 0x66, 0x20, 0x28, 0x61, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, // if (ax != vmax) 
	0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x78, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, // { _v.x *= scale;
	0x20, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x79, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, //  }.if (ay != vma
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, // x) { _v.y *= sca
	0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x7a, 0x20, 0x21, 0x3d, 0x20, // le; }.if (az != 
	0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x7a, 0x20, 0x2a, 0x3d, 0x20, // vmax) { _v.z *= 
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // scale; }.return 
	0x5f, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x74, 0x65, 0x78, // _v;.}.float2 tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x42, 0x63, 0x35, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // ture2DBc5(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // mpler2D _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, // , float2 _uv).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // return bgfxTextu
	0x72, 0x65, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // re2D(_sampler, _
	0x75, 0x76, 0x29, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // uv).xy;.}.float3
	0x78, 0x33, 0x20, 0x63, 0x6f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x28, 0x66, 0x6c, 0x6f, 0x61, // x3 cofactor(floa
	0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // t4x4 _m).{.retur
	0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, // n float3x3(._m[1
	0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, // ][1]*_m[2][2]-_m
	0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, // [1][2]*_m[2][1],
	0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, // ._m[1][2]*_m[2][
	0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, // 0]-_m[1][0]*_m[2
	0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, // ][2],._m[1][0]*_
	0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, // m[2][1]-_m[1][1]
	0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, // *_m[2][0],._m[0]
	0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, // [2]*_m[2][1]-_m[
	0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, // 0][1]*_m[2][2],.
	0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, // _m[0][0]*_m[2][2
	0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, // ]-_m[0][2]*_m[2]
	0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, // [0],._m[0][1]*_m
	0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, // [2][0]-_m[0][0]*
	0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, // _m[2][1],._m[0][
	0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, // 1]*_m[1][2]-_m[0
	0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, // ][2]*_m[1][1],._
	0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, // m[0][2]*_m[1][0]
	0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // -_m[0][0]*_m[1][
	0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // 2],._m[0][0]*_m[
	0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, // 1][1]-_m[0][1]*_
	0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, // m[1][0].);.}.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // form float4x4 u_
	0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, // viewProjection;.
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // static float4 u_
	0x65, 0x79, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x73, 0x74, 0x61, // eyePosition;.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x75, 0x5f, 0x68, // tic float3x3 u_h
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // ighlightPosition
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, // LightDirectionLi
	0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, // ghtColor;.static
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6e, 0x75, 0x6d, 0x53, 0x70, 0x65, //  float4 u_numSpe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x41, 0x6e, // cularMipLevelsAn
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // imationTime;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // form float4x4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x4f, 0x75, // modelToWorld;.Ou
	0x74, 0x70, 0x75, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // tput main( float
	0x34, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3a, 0x20, 0x43, 0x4f, 0x4c, // 4 a_color0 : COL
	0x4f, 0x52, 0x30, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x6e, // OR0 , float3 a_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3a, 0x20, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x20, 0x2c, // ormal : NORMAL ,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  float4 a_positi
	0x6f, 0x6e, 0x20, 0x3a, 0x20, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x20, 0x2c, 0x20, // on : POSITION , 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, // float4 a_tangent
	0x20, 0x3a, 0x20, 0x54, 0x41, 0x4e, 0x47, 0x45, 0x4e, 0x54, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, //  : TANGENT , flo
	0x61, 0x74, 0x32, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, // at2 a_texcoord0 
	0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x20, 0x2c, 0x20, 0x66, 0x6c, // : TEXCOORD0 , fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3a, 0x20, 0x54, // oat4 i_data0 : T
	0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x37, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // EXCOORD7 , float
	0x34, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x31, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, // 4 i_data1 : TEXC
	0x4f, 0x4f, 0x52, 0x44, 0x36, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, // OORD6 , float4 i
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x32, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, // _data2 : TEXCOOR
	0x44, 0x35, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x5f, 0x64, 0x61, // D5 , float4 i_da
	0x74, 0x61, 0x33, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x34, 0x29, // ta3 : TEXCOORD4)
	0x20, 0x7b, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, //  { Output _varyi
	0x6e, 0x67, 0x5f, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, // ng_; _varying_.v
	0x5f, 0x54, 0x42, 0x4e, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, // _TBN = float3x3(
	0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, // 0.0,0.0,0.0,0.0,
	0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, // 0.0,0.0,0.0,0.0,
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, // 0.0);; _varying_
	0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .v_color0 = floa
	0x74, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, // t4(1.0, 0.0, 0.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // , 1.0);; _varyin
	0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, // g_.v_positionWor
	0x6c, 0x64, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, // ld = float3(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, //  0.0, 0.0);; _va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // rying_.v_texcoor
	0x64, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, // d0 = float2(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  0.0);;.{.float4
	0x78, 0x34, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x3b, 0x0a, 0x74, 0x72, // x4 transform;.tr
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x30, 0x5d, 0x20, 0x3d, 0x20, 0x69, 0x5f, 0x64, // ansform[0] = i_d
	0x61, 0x74, 0x61, 0x30, 0x3b, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, // ata0;.transform[
	0x31, 0x5d, 0x20, 0x3d, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x31, 0x3b, 0x0a, 0x74, 0x72, // 1] = i_data1;.tr
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x32, 0x5d, 0x20, 0x3d, 0x20, 0x69, 0x5f, 0x64, // ansform[2] = i_d
	0x61, 0x74, 0x61, 0x32, 0x3b, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, // ata2;.transform[
	0x33, 0x5d, 0x20, 0x3d, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x33, 0x3b, 0x0a, 0x66, 0x6c, // 3] = i_data3;.fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, // oat4x4 modelTran
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x74, 0x72, 0x61, 0x6e, // sform = mul(tran
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2c, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x6f, // sform, u_modelTo
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x74, // World);.float4 t
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x57, 0x6f, 0x72, // ransformedPosWor
	0x6c, 0x64, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ld = mul(a_posit
	0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, // ion, modelTransf
	0x6f, 0x72, 0x6d, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, // orm);._varying_.
	0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x6d, 0x75, // gl_Position = mu
	0x6c, 0x28, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73, // l(transformedPos
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x2c, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // World, u_viewPro
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, // jection);._varyi
	0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, // ng_.v_positionWo
	0x72, 0x6c, 0x64, 0x20, 0x3d, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, // rld = transforme
	0x64, 0x50, 0x6f, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, // dPosWorld.xyz / 
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x57, 0x6f, // transformedPosWo
	0x72, 0x6c, 0x64, 0x2e, 0x77, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6e, 0x6f, // rld.w;.float3 no
	0x72, 0x6d, 0x61, 0x6c, 0x57, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // rmalW = normaliz
	0x65, 0x28, 0x6d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x61, 0x5f, 0x6e, // e(mul(float4(a_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x2c, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ormal.x, a_norma
	0x6c, 0x2e, 0x79, 0x2c, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, // l.y, a_normal.z,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, //  0.0), modelTran
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // sform).xyz);.flo
	0x61, 0x74, 0x33, 0x20, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x20, 0x3d, 0x20, 0x6e, // at3 tangentW = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, // ormalize(mul(flo
	0x61, 0x74, 0x34, 0x28, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x78, 0x2c, // at4(a_tangent.x,
	0x20, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x79, 0x2c, 0x20, 0x61, 0x5f, //  a_tangent.y, a_
	0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, // tangent.z, 0.0),
	0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x29, //  modelTransform)
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, 0x69, // .xyz);.float3 bi
	0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x20, 0x3d, 0x20, 0x63, 0x72, 0x6f, 0x73, 0x73, // tangentW = cross
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x57, 0x2c, 0x20, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, // (normalW, tangen
	0x74, 0x57, 0x29, 0x20, 0x2a, 0x20, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2e, // tW) * a_tangent.
	0x77, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x54, // w;._varying_.v_T
	0x42, 0x4e, 0x20, 0x3d, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, // BN = mtxFromRows
	0x28, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x2c, 0x20, 0x62, 0x69, 0x74, 0x61, 0x6e, // (tangentW, bitan
	0x67, 0x65, 0x6e, 0x74, 0x57, 0x2c, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x57, 0x29, 0x3b, // gentW, normalW);
	0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, // ._varying_.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // coord0 = a_texco
	0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, // ord0;._varying_.
	0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, // v_color0 = a_col
	0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x7d, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, // or0;.} return _v
	0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, // arying_;.}......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0xfe, 0xef, 0xfe, 0xef, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x51, 0x00, 0x00, 0x00, 0x43, // ...........Q...C
	0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x74, 0x2d, 0x6f, 0x6c, 0x6f, 0x6c, 0x75, 0x5c, // :.Users.t-ololu.
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x5c, 0x4f, 0x70, 0x65, // source.repos.Ope
	0x6e, 0x58, 0x52, 0x2d, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x69, 0x74, 0x79, // nXR-MixedReality
	0x5c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5c, 0x70, 0x62, 0x72, 0x5c, 0x53, 0x68, 0x61, 0x64, // .shared.pbr.Shad
	0x65, 0x72, 0x73, 0x5c, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x20, 0x50, 0x62, 0x72, 0x20, // ers.Compile Pbr 
	0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x54, 0x65, // Shaders.ShaderTe
	0x6d, 0x70, 0x2e, 0x62, 0x69, 0x6e, 0x2e, 0x68, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, 0x00, 0x63, // mp.bin.h.hlsl..c
	0x3a, 0x5c, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x74, 0x2d, 0x6f, 0x6c, 0x6f, 0x6c, 0x75, 0x5c, // :.users.t-ololu.
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x5c, 0x6f, 0x70, 0x65, // source.repos.ope
	0x6e, 0x78, 0x72, 0x2d, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x74, 0x79, // nxr-mixedreality
	0x5c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5c, 0x70, 0x62, 0x72, 0x5c, 0x73, 0x68, 0x61, 0x64, // .shared.pbr.shad
	0x65, 0x72, 0x73, 0x5c, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x20, 0x70, 0x62, 0x72, 0x20, // ers.compile pbr 
	0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x74, 0x65, // shaders.shaderte
	0x6d, 0x70, 0x2e, 0x62, 0x69, 0x6e, 0x2e, 0x68, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, 0x2f, 0x2f, // mp.bin.h.hlsl.//
	0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, //  shaderc command
	0x20, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x0a, 0x2f, 0x2f, 0x20, 0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, //  line:.// C:.Use
	0x72, 0x73, 0x5c, 0x74, 0x2d, 0x6f, 0x6c, 0x6f, 0x6c, 0x75, 0x5c, 0x73, 0x6f, 0x75, 0x72, 0x63, // rs.t-ololu.sourc
	0x65, 0x5c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x5c, 0x62, 0x67, 0x66, 0x78, 0x5c, 0x2e, 0x62, 0x75, // e.repos.bgfx..bu
	0x69, 0x6c, 0x64, 0x5c, 0x77, 0x69, 0x6e, 0x33, 0x32, 0x5f, 0x76, 0x73, 0x32, 0x30, 0x31, 0x37, // ild.win32_vs2017
	0x5c, 0x62, 0x69, 0x6e, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x63, 0x44, 0x65, 0x62, 0x75, // .bin.shadercDebu
	0x67, 0x20, 0x2d, 0x69, 0x20, 0x2e, 0x2f, 0x20, 0x2d, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x20, 0x76, // g -i ./ --type v
	0x65, 0x72, 0x74, 0x65, 0x78, 0x20, 0x2d, 0x2d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x20, 0x2d, 0x4f, // ertex --debug -O
	0x20, 0x30, 0x20, 0x2d, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x77, 0x69, //  0 --platform wi
	0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x2d, 0x70, 0x20, 0x76, 0x73, 0x5f, 0x35, 0x5f, 0x30, 0x20, // ndows -p vs_5_0 
	0x2d, 0x4f, 0x20, 0x33, 0x20, 0x2d, 0x66, 0x20, 0x76, 0x73, 0x5f, 0x50, 0x62, 0x72, 0x56, 0x65, // -O 3 -f vs_PbrVe
	0x72, 0x74, 0x65, 0x78, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x63, 0x20, 0x2d, 0x6f, // rtexShader.sc -o
	0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x2e, 0x62, 0x69, 0x6e, 0x2e, //  ShaderTemp.bin.
	0x68, 0x20, 0x2d, 0x2d, 0x62, 0x69, 0x6e, 0x32, 0x63, 0x20, 0x76, 0x73, 0x5f, 0x50, 0x62, 0x72, // h --bin2c vs_Pbr
	0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x78, 0x31, // VertexShader_dx1
	0x31, 0x0a, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x4f, 0x75, 0x74, 0x70, 0x75, // 1...struct Outpu
	0x74, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, // t.{.float4 gl_Po
	0x73, 0x69, 0x1b, 0xe2, 0x30, 0x01, 0x80, 0x00, 0x00, 0x00, 0x05, 0xd2, 0xf3, 0xe6, 0xe7, 0x8d, // si..0...........
	0xd6, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x1b, 0xe2, // ......q...(.....
	0x30, 0x01, 0x83, 0x62, 0x1a, 0x2a, 0x29, 0x50, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x70, 0x00, // 0..b.*)P......p.
	0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..q.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x42, 0x00, 0x3c, 0x11, 0x10, 0x01, 0x00, 0x00, 0x00, 0x01, // ......B.<.......
	0x0a, 0x00, 0x01, 0x00, 0x01, 0x00, 0x61, 0x4a, 0x0a, 0x00, 0x01, 0x00, 0x01, 0x00, 0x61, 0x4a, // ......aJ......aJ
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, // Microsoft (R) HL
	0x53, 0x4c, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, // SL Shader Compil
	0x65, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x00, 0x00, 0x00, 0x36, 0x00, 0x3d, 0x11, 0x01, 0x68, // er 10.1...6.=..h
	0x6c, 0x73, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x00, 0x30, 0x78, 0x35, 0x30, 0x30, 0x31, 0x00, // lslFlags.0x5001.
	0x68, 0x6c, 0x73, 0x6c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x76, 0x73, 0x5f, 0x35, 0x5f, // hlslTarget.vs_5_
	0x30, 0x00, 0x68, 0x6c, 0x73, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x00, 0x6d, 0x61, 0x69, 0x6e, // 0.hlslEntry.main
	0x00, 0x00, 0x2a, 0x00, 0x10, 0x11, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x0b, 0x00, 0x00, 0x00, 0x00, // ..*.............
	0x00, 0x00, 0x8c, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x05, 0x00, 0x00, 0x08, 0x10, // ................
	0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0xa0, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x2e, 0x00, // .........main...
	0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x09, 0x00, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, // >.......a_color0
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P...............
	0x8c, 0x05, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, // ........P.......
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P...............
	0x8c, 0x05, 0x08, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x0c, 0x00, // ........P.......
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x0c, 0x00, 0x00, 0x00, 0x2e, 0x00, // ................
	0x3e, 0x11, 0x01, 0x10, 0x00, 0x00, 0x09, 0x00, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // >.......a_normal
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P...............
	0x8c, 0x05, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, // ........P.......
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P...............
	0x8c, 0x05, 0x18, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x09, 0x00, // ......2.>.......
	0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // a_position......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ............P...
	0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x20, 0x00, // .............. .
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x24, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ......$.....P...
	0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x28, 0x00, // ..............(.
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x2c, 0x00, 0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x00, 0x10, // ......,...2.>...
	0x00, 0x00, 0x09, 0x00, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x00, 0x00, 0x00, // ....a_tangent...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P...............
	0x8c, 0x05, 0x30, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, // ..0.....P.......
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x34, 0x00, 0x00, 0x00, 0x16, 0x00, // ..........4.....
	0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P...............
	0x8c, 0x05, 0x38, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x0c, 0x00, // ..8.....P.......
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x3c, 0x00, 0x00, 0x00, 0x32, 0x00, // ..........<...2.
	0x3e, 0x11, 0x02, 0x10, 0x00, 0x00, 0x09, 0x00, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // >.......a_texcoo
	0x72, 0x64, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // rd0.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x40, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ......@.....P...
	0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x44, 0x00, // ..............D.
	0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x09, 0x00, 0x69, 0x5f, 0x64, 0x61, // ....>.......i_da
	0x74, 0x61, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ta0.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x50, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ......P.....P...
	0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x54, 0x00, // ..............T.
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x58, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ......X.....P...
	0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x5c, 0x00, // ................
	0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x09, 0x00, 0x69, 0x5f, 0x64, 0x61, // ....>.......i_da
	0x74, 0x61, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ta1.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x60, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ......`.....P...
	0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x64, 0x00, // ..............d.
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x68, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ......h.....P...
	0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x6c, 0x00, // ..............l.
	0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x09, 0x00, 0x69, 0x5f, 0x64, 0x61, // ....>.......i_da
	0x74, 0x61, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ta2.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x70, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ......p.....P...
	0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x74, 0x00, // ..............t.
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x78, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ......x.....P...
	0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x7c, 0x00, // ..............|.
	0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x09, 0x00, 0x69, 0x5f, 0x64, 0x61, // ....>.......i_da
	0x74, 0x61, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ta3.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x80, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ............P...
	0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x84, 0x00, // ................
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xe8, 0x00, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x88, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x01, 0x00, // ............P...
	0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x8c, 0x00, // ................
	0x00, 0x00, 0x3a, 0x00, 0x3e, 0x11, 0x07, 0x10, 0x00, 0x00, 0x88, 0x00, 0x3c, 0x6d, 0x61, 0x69, // ..:.>.......<mai
	0x6e, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x00, // n return value>.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x50, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P.....P.........
	0x8c, 0x05, 0x60, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x54, 0x00, // ..`.....P.....T.
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x64, 0x00, 0x00, 0x00, 0x16, 0x00, // ..........d.....
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x44, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P.....D.........
	0x8c, 0x05, 0x50, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x48, 0x00, // ..P.....P.....H.
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x54, 0x00, 0x00, 0x00, 0x16, 0x00, // ..........T.....
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x4c, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P.....L.........
	0x8c, 0x05, 0x58, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x34, 0x00, // ..X.....P.....4.
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x40, 0x00, 0x00, 0x00, 0x16, 0x00, // ..........@.....
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x38, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P.....8.........
	0x8c, 0x05, 0x44, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x3c, 0x00, // ..D.....P.....<.
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x48, 0x00, 0x00, 0x00, 0x16, 0x00, // ..........H.....
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x40, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P.....@.........
	0x8c, 0x05, 0x4c, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x28, 0x00, // ..L.....P.....(.
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x30, 0x00, 0x00, 0x00, 0x16, 0x00, // ..........0.....
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x2c, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P.....,.........
	0x8c, 0x05, 0x34, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x30, 0x00, // ..4.....P.....0.
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x38, 0x00, 0x00, 0x00, 0x16, 0x00, // ..........8.....
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P...............
	0x8c, 0x05, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x20, 0x00, // .. .....P..... .
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x24, 0x00, 0x00, 0x00, 0x16, 0x00, // ..........$.....
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x24, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P.....$.........
	0x8c, 0x05, 0x28, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x10, 0x00, // ..(.....P.......
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x14, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P...............
	0x8c, 0x05, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x18, 0x00, // ........P.......
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x18, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P...............
	0x8c, 0x05, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x04, 0x00, // ........P.......
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, // P...............
	0x8c, 0x05, 0x08, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x02, 0x00, 0x05, 0x00, 0x0c, 0x00, // ........P.......
	0x04, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x05, 0x0c, 0x00, 0x00, 0x00, 0x36, 0x00, // ..............6.
	0x3e, 0x11, 0x09, 0x10, 0x00, 0x00, 0x08, 0x00, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72, 0x61, // >.......modelTra
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // nsform..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x30, 0x00, // ........P.....0.
	0x04, 0x00, 0x08, 0x01, 0x00, 0x00, 0x01, 0x00, 0x18, 0x01, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x34, 0x00, 0x04, 0x00, 0x28, 0x01, 0x00, 0x00, 0x01, 0x00, // P.....4...(.....
	0x94, 0x01, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x38, 0x00, // ........P.....8.
	0x04, 0x00, 0x48, 0x01, 0x00, 0x00, 0x01, 0x00, 0x10, 0x02, 0x08, 0x00, 0x00, 0x00, 0x16, 0x00, // ..H.............
	0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x3c, 0x00, 0x04, 0x00, 0x68, 0x01, 0x00, 0x00, 0x01, 0x00, // P.....<...h.....
	0x1c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00, // ........P.......
	0x04, 0x00, 0xa4, 0x01, 0x00, 0x00, 0x01, 0x00, 0xd0, 0x04, 0x1c, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xc4, 0x01, 0x00, 0x00, 0x01, 0x00, // P...............
	0xa0, 0x02, 0x10, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, // ........P.......
	0x04, 0x00, 0xe4, 0x01, 0x00, 0x00, 0x01, 0x00, 0xb8, 0x02, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, // ................
	0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x04, 0x02, 0x00, 0x00, 0x01, 0x00, // P...............
	0x28, 0x02, 0x18, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x1c, 0x00, // (.......P.......
	0x04, 0x00, 0x40, 0x02, 0x00, 0x00, 0x01, 0x00, 0x34, 0x04, 0x2c, 0x00, 0x00, 0x00, 0x16, 0x00, // ..@.....4.,.....
	0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x04, 0x00, 0x60, 0x02, 0x00, 0x00, 0x01, 0x00, // P.........`.....
	0xf0, 0x02, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x14, 0x00, // .. .....P.......
	0x04, 0x00, 0x80, 0x02, 0x00, 0x00, 0x01, 0x00, 0xd0, 0x02, 0x24, 0x00, 0x00, 0x00, 0x16, 0x00, // ..........$.....
	0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x18, 0x00, 0x04, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x01, 0x00, // P...............
	0xb0, 0x02, 0x28, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x2c, 0x00, // ..(.....P.....,.
	0x04, 0x00, 0xdc, 0x02, 0x00, 0x00, 0x01, 0x00, 0x98, 0x03, 0x3c, 0x00, 0x00, 0x00, 0x16, 0x00, // ..........<.....
	0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00, 0x04, 0x00, 0xfc, 0x02, 0x00, 0x00, 0x01, 0x00, // P..... .........
	0x78, 0x03, 0x30, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x24, 0x00, // x.0.....P.....$.
	0x04, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x01, 0x00, 0x58, 0x03, 0x34, 0x00, 0x00, 0x00, 0x16, 0x00, // ........X.4.....
	0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x28, 0x00, 0x04, 0x00, 0x3c, 0x03, 0x00, 0x00, 0x01, 0x00, // P.....(...<.....
	0x38, 0x03, 0x38, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x3e, 0x11, 0x00, 0x10, 0x00, 0x00, 0x08, 0x00, // 8.8...:.>.......
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x57, 0x6f, // transformedPosWo
	0x72, 0x6c, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // rld.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x84, 0x01, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x34, 0x03, 0x0c, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, // ....4.......P...
	0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x20, 0x02, 0x00, 0x00, 0x01, 0x00, 0x60, 0x02, 0x00, 0x00, // ...... .....`...
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xbc, 0x02, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x54, 0x01, 0x04, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, // ....T.......P...
	0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x58, 0x03, 0x00, 0x00, 0x01, 0x00, 0xf0, 0x00, 0x08, 0x00, // ......X.........
	0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x01, 0x10, 0x00, 0x00, 0x08, 0x00, 0x6e, 0x6f, 0x72, 0x6d, // ....>.......norm
	0x61, 0x6c, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // alW.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0xe8, 0x04, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, // ............P...
	0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0xe8, 0x04, 0x00, 0x00, 0x01, 0x00, 0x8c, 0x01, 0x04, 0x00, // ................
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0xe8, 0x04, // ....P...........
	0x00, 0x00, 0x01, 0x00, 0x8c, 0x01, 0x08, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x3e, 0x11, 0x01, 0x10, // ............>...
	0x00, 0x00, 0x08, 0x00, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x00, 0x00, 0x00, 0x00, // ....tangentW....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, // ............P...
	0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x34, 0x05, 0x00, 0x00, 0x01, 0x00, 0x40, 0x01, 0x10, 0x00, // ......4.....@...
	0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x04, 0x00, 0x34, 0x05, // ....P.........4.
	0x00, 0x00, 0x01, 0x00, 0x40, 0x01, 0x14, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, // ....@.......P...
	0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x34, 0x05, 0x00, 0x00, 0x01, 0x00, 0x40, 0x01, 0x18, 0x00, // ......4.....@...
	0x00, 0x00, 0x32, 0x00, 0x3e, 0x11, 0x01, 0x10, 0x00, 0x00, 0x08, 0x00, 0x62, 0x69, 0x74, 0x61, // ..2.>.......bita
	0x6e, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ngentW..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, // ........P.......
	0x04, 0x00, 0x94, 0x05, 0x00, 0x00, 0x01, 0x00, 0xe0, 0x00, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, // .......... .....
	0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x94, 0x05, 0x00, 0x00, 0x01, 0x00, // P...............
	0xe0, 0x00, 0x24, 0x00, 0x00, 0x00, 0x16, 0x00, 0x50, 0x11, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, // ..$.....P.......
	0x04, 0x00, 0x94, 0x05, 0x00, 0x00, 0x01, 0x00, 0xe0, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x00, // ..........(.....
	0x06, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x01, // ................
	0x6b, 0x1b, 0x1f, 0xf6, 0x9b, 0x18, 0xa0, 0x80, 0x7a, 0xac, 0x5a, 0x65, 0x22, 0x6a, 0xe4, 0xe0, // k.......z.Ze"j..
	0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0xf8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x01, 0x00, 0x74, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0xec, 0x04, // ..t.......h.....
	0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0xe8, 0x00, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0x08, 0x01, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0x28, 0x01, 0x00, 0x00, 0x80, 0x02, // ..(.......(.....
	0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0x48, 0x01, 0x00, 0x00, 0x80, 0x02, // ..H.......H.....
	0x00, 0x00, 0x68, 0x01, 0x00, 0x00, 0x81, 0x02, 0x00, 0x80, 0x68, 0x01, 0x00, 0x00, 0x81, 0x02, // ..h.......h.....
	0x00, 0x00, 0x84, 0x01, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0x84, 0x01, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0xa4, 0x01, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0xa4, 0x01, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0xc4, 0x01, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0xc4, 0x01, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0xe4, 0x01, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0xe4, 0x01, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x81, 0x02, 0x00, 0x80, 0x04, 0x02, 0x00, 0x00, 0x81, 0x02, // ................
	0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0x20, 0x02, 0x00, 0x00, 0x80, 0x02, // .. ....... .....
	0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0x40, 0x02, 0x00, 0x00, 0x80, 0x02, // ..@.......@.....
	0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0x60, 0x02, 0x00, 0x00, 0x80, 0x02, // ..`.......`.....
	0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0x80, 0x02, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x81, 0x02, 0x00, 0x80, 0xa0, 0x02, 0x00, 0x00, 0x81, 0x02, // ................
	0x00, 0x00, 0xbc, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0xbc, 0x02, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0xdc, 0x02, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0xfc, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0xfc, 0x02, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x80, 0x02, 0x00, 0x80, 0x1c, 0x03, 0x00, 0x00, 0x80, 0x02, // ................
	0x00, 0x00, 0x3c, 0x03, 0x00, 0x00, 0x81, 0x02, 0x00, 0x80, 0x3c, 0x03, 0x00, 0x00, 0x81, 0x02, // ..<.......<.....
	0x00, 0x00, 0x58, 0x03, 0x00, 0x00, 0x82, 0x02, 0x00, 0x80, 0x58, 0x03, 0x00, 0x00, 0x82, 0x02, // ..X.......X.....
	0x00, 0x00, 0x78, 0x03, 0x00, 0x00, 0x82, 0x02, 0x00, 0x80, 0x78, 0x03, 0x00, 0x00, 0x82, 0x02, // ..x.......x.....
	0x00, 0x00, 0x98, 0x03, 0x00, 0x00, 0x82, 0x02, 0x00, 0x80, 0x98, 0x03, 0x00, 0x00, 0x82, 0x02, // ................
	0x00, 0x00, 0xb8, 0x03, 0x00, 0x00, 0x82, 0x02, 0x00, 0x80, 0xb8, 0x03, 0x00, 0x00, 0x82, 0x02, // ................
	0x00, 0x00, 0xd8, 0x03, 0x00, 0x00, 0x83, 0x02, 0x00, 0x80, 0xd8, 0x03, 0x00, 0x00, 0x83, 0x02, // ................
	0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0x84, 0x02, 0x00, 0x80, 0xf4, 0x03, 0x00, 0x00, 0x84, 0x02, // ................
	0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x85, 0x02, 0x00, 0x80, 0x10, 0x04, 0x00, 0x00, 0x85, 0x02, // ................
	0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x84, 0x02, 0x00, 0x80, 0x2c, 0x04, 0x00, 0x00, 0x84, 0x02, // ..,.......,.....
	0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x85, 0x02, 0x00, 0x80, 0x48, 0x04, 0x00, 0x00, 0x85, 0x02, // ..H.......H.....
	0x00, 0x00, 0x64, 0x04, 0x00, 0x00, 0x84, 0x02, 0x00, 0x80, 0x64, 0x04, 0x00, 0x00, 0x84, 0x02, // ..d.......d.....
	0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x85, 0x02, 0x00, 0x80, 0x80, 0x04, 0x00, 0x00, 0x85, 0x02, // ................
	0x00, 0x00, 0x9c, 0x04, 0x00, 0x00, 0x84, 0x02, 0x00, 0x80, 0x9c, 0x04, 0x00, 0x00, 0x84, 0x02, // ................
	0x00, 0x00, 0xb8, 0x04, 0x00, 0x00, 0x84, 0x02, 0x00, 0x80, 0xb8, 0x04, 0x00, 0x00, 0x84, 0x02, // ................
	0x00, 0x00, 0xcc, 0x04, 0x00, 0x00, 0x84, 0x02, 0x00, 0x80, 0xcc, 0x04, 0x00, 0x00, 0x84, 0x02, // ................
	0x00, 0x00, 0xe8, 0x04, 0x00, 0x00, 0x85, 0x02, 0x00, 0x80, 0xe8, 0x04, 0x00, 0x00, 0x85, 0x02, // ................
	0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0x85, 0x02, 0x00, 0x80, 0x04, 0x05, 0x00, 0x00, 0x85, 0x02, // ................
	0x00, 0x00, 0x18, 0x05, 0x00, 0x00, 0x85, 0x02, 0x00, 0x80, 0x18, 0x05, 0x00, 0x00, 0x85, 0x02, // ................
	0x00, 0x00, 0x34, 0x05, 0x00, 0x00, 0x86, 0x02, 0x00, 0x80, 0x34, 0x05, 0x00, 0x00, 0x86, 0x02, // ..4.......4.....
	0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0x86, 0x02, 0x00, 0x80, 0x50, 0x05, 0x00, 0x00, 0x86, 0x02, // ..P.......P.....
	0x00, 0x00, 0x78, 0x05, 0x00, 0x00, 0x86, 0x02, 0x00, 0x80, 0x78, 0x05, 0x00, 0x00, 0x86, 0x02, // ..x.......x.....
	0x00, 0x00, 0x94, 0x05, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0x94, 0x05, 0x00, 0x00, 0x8a, 0x02, // ................
	0x00, 0x00, 0xa8, 0x05, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0xa8, 0x05, 0x00, 0x00, 0x8a, 0x02, // ................
	0x00, 0x00, 0xbc, 0x05, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0xbc, 0x05, 0x00, 0x00, 0x8a, 0x02, // ................
	0x00, 0x00, 0xd0, 0x05, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0xd0, 0x05, 0x00, 0x00, 0x8a, 0x02, // ................
	0x00, 0x00, 0xe4, 0x05, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0xe4, 0x05, 0x00, 0x00, 0x8a, 0x02, // ................
	0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0xf8, 0x05, 0x00, 0x00, 0x8a, 0x02, // ................
	0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0x0c, 0x06, 0x00, 0x00, 0x8a, 0x02, // ................
	0x00, 0x00, 0x20, 0x06, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0x20, 0x06, 0x00, 0x00, 0x8a, 0x02, // .. ....... .....
	0x00, 0x00, 0x34, 0x06, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0x34, 0x06, 0x00, 0x00, 0x8a, 0x02, // ..4.......4.....
	0x00, 0x00, 0x48, 0x06, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0x48, 0x06, 0x00, 0x00, 0x8a, 0x02, // ..H.......H.....
	0x00, 0x00, 0x5c, 0x06, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0x5c, 0x06, 0x00, 0x00, 0x8a, 0x02, // ................
	0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0x8a, 0x02, 0x00, 0x80, 0x70, 0x06, 0x00, 0x00, 0x8a, 0x02, // ..p.......p.....
	0x00, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, // ....9...8...9...
	0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, // 8...9...8...9...
	0x38, 0x00, 0x01, 0x00, 0x3d, 0x00, 0x1e, 0x00, 0x3c, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, // 8...=...<...9...
	0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, // 8...9...8...9...
	0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x3d, 0x00, 0x1e, 0x00, // 8...9...8...=...
	0x3c, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, // <...9...8...9...
	0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, // 8...9...8...9...
	0x38, 0x00, 0x01, 0x00, 0x3d, 0x00, 0x1e, 0x00, 0x3c, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, // 8...=...<...9...
	0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, // 8...9...8...9...
	0x38, 0x00, 0x01, 0x00, 0x39, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x01, 0x00, 0x3d, 0x00, 0x1e, 0x00, // 8...9...8...=...
	0x3c, 0x00, 0x01, 0x00, 0x43, 0x00, 0x19, 0x00, 0x42, 0x00, 0x01, 0x00, 0x43, 0x00, 0x19, 0x00, // <...C...B...C...
	0x42, 0x00, 0x01, 0x00, 0x43, 0x00, 0x19, 0x00, 0x42, 0x00, 0x01, 0x00, 0x43, 0x00, 0x19, 0x00, // B...C...B...C...
	0x42, 0x00, 0x01, 0x00, 0x4c, 0x00, 0x1d, 0x00, 0x4b, 0x00, 0x01, 0x00, 0x65, 0x00, 0x1c, 0x00, // B...L...K...e...
	0x5f, 0x00, 0x01, 0x00, 0x69, 0x00, 0x1d, 0x00, 0x63, 0x00, 0x01, 0x00, 0x65, 0x00, 0x1c, 0x00, // _...i...c...e...
	0x5f, 0x00, 0x01, 0x00, 0x69, 0x00, 0x1d, 0x00, 0x63, 0x00, 0x01, 0x00, 0x65, 0x00, 0x1c, 0x00, // _...i...c...e...
	0x5f, 0x00, 0x01, 0x00, 0x69, 0x00, 0x1d, 0x00, 0x63, 0x00, 0x01, 0x00, 0x65, 0x00, 0x12, 0x00, // _...i...c...e...
	0x64, 0x00, 0x01, 0x00, 0x65, 0x00, 0x12, 0x00, 0x64, 0x00, 0x01, 0x00, 0x65, 0x00, 0x12, 0x00, // d...e...d...e...
	0x64, 0x00, 0x01, 0x00, 0x69, 0x00, 0x13, 0x00, 0x68, 0x00, 0x01, 0x00, 0x69, 0x00, 0x13, 0x00, // d...i...h...i...
	0x68, 0x00, 0x01, 0x00, 0x69, 0x00, 0x13, 0x00, 0x68, 0x00, 0x01, 0x00, 0x3b, 0x00, 0x15, 0x00, // h...i...h...;...
	0x2c, 0x00, 0x01, 0x00, 0x3b, 0x00, 0x15, 0x00, 0x2c, 0x00, 0x01, 0x00, 0x3b, 0x00, 0x15, 0x00, // ,...;...,...;...
	0x3a, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, // :...............
	0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, // ................
	0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, // ................
	0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, // ................
	0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, // ................
	0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, 0x13, 0x00, 0x03, 0x00, // ................
	0x13, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, // ..........<.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0b, 0xca, 0x31, 0x01, 0x38, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0b, 0x10, // ....1.8.........
	0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x0a, 0x00, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, // ..p.............
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x08, 0x00, // ......,...,.....
	0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x1b, 0x15, 0x40, 0x00, // ..4...........@.
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x00, 0xf3, // ........float4..
	0xf2, 0xf1, 0x16, 0x00, 0x1b, 0x15, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, // ......@.........
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x00, 0xf3, 0xf2, 0xf1, 0x16, 0x00, 0x1b, 0x15, 0x40, 0x00, // float3........@.
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x00, 0xf3, // ........float2..
	0xf2, 0xf1, 0x2a, 0x00, 0x01, 0x12, 0x09, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x10, // ..*.............
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 0x00, 0x10, // ................
	0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x1e, 0x00, // ................
	0x1c, 0x15, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, // ..@.............
	0x00, 0x00, 0x00, 0x24, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x00, 0x72, 0x00, // ...$.float3x3.r.
	0x03, 0x12, 0x0d, 0x15, 0x03, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x50, // ............gl_P
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0xf2, 0xf1, 0x0d, 0x15, 0x03, 0x00, 0x04, 0x10, // osition.........
	0x00, 0x00, 0x10, 0x00, 0x76, 0x5f, 0x54, 0x42, 0x4e, 0x00, 0x0d, 0x15, 0x03, 0x00, 0x00, 0x10, // ....v_TBN.......
	0x00, 0x00, 0x34, 0x00, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0xf1, 0x0d, 0x15, // ..4.v_color0....
	0x03, 0x00, 0x01, 0x10, 0x00, 0x00, 0x44, 0x00, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // ......D.v_positi
	0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0xf2, 0xf1, 0x0d, 0x15, 0x03, 0x00, 0x02, 0x10, // onWorld.........
	0x00, 0x00, 0x50, 0x00, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, // ..P.v_texcoord0.
	0xf2, 0xf1, 0x1e, 0x00, 0x05, 0x15, 0x05, 0x00, 0x00, 0x00, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x00, 0xf3, // ......X.Output..
	0xf2, 0xf1, 0x0a, 0x00, 0x18, 0x15, 0x06, 0x10, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0e, 0x00, // ................
	0x08, 0x10, 0x07, 0x10, 0x00, 0x00, 0x17, 0x00, 0x09, 0x00, 0x03, 0x10, 0x00, 0x00, 0x1e, 0x00, // ................
	0x1c, 0x15, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, // ..@.............
	0x00, 0x00, 0x00, 0x40, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x00, 0x0a, 0x00, // ...@.float4x4...
	0x18, 0x15, 0x09, 0x10, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0b, 0xca, 0x31, 0x01, 0x38, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, // ....1.8.........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, // ................
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // ..eturn asfloat(
	0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x69, // _x); }.float4 ui
	0x6e, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x75, 0x69, // ntBitsToFloat(ui
	0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // nt4 _x) { return
	0x20, 0x61, 0x73, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  asfloat(_x); }.
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, // uint floatBitsTo
	0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // Uint(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, //  return asuint(_
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, 0x61, // x); }.uint2 floa
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // tBitsToUint(floa
	0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t2 _x) { return 
	0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, // asuint(_x); }.ui
	0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, // nt3 floatBitsToU
	0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // int(float3 _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, //  return asuint(_
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x66, 0x6c, 0x6f, 0x61, // x); }.uint4 floa
	0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // tBitsToUint(floa
	0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t4 _x) { return 
	0x61, 0x73, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, // asuint(_x); }.in
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, // t floatBitsToInt
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // (float _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, // urn asint(_x); }
	0x0a, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, // .int2 floatBitsT
	0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, // oInt(float2 _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, // { return asint(_
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // x); }.int3 float
	0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // BitsToInt(float3
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, 0x73, //  _x) { return as
	0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, // int(_x); }.int4 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x49, 0x6e, 0x74, 0x28, 0x66, // floatBitsToInt(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat4 _x) { retu
	0x72, 0x6e, 0x20, 0x61, 0x73, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // rn asint(_x); }.
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, // uint bitfieldRev
	0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, // erse(uint _x) { 
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, // return reversebi
	0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, // ts(_x); }.uint2 
	0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, // bitfieldReverse(
	0x75, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // uint2 _x) { retu
	0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, // rn reversebits(_
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x62, 0x69, 0x74, 0x66, // x); }.uint3 bitf
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, // ieldReverse(uint
	0x33, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, // 3 _x) { return r
	0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, // eversebits(_x); 
	0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, // }.uint4 bitfield
	0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x5f, 0x78, // Reverse(uint4 _x
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, 0x76, 0x65, 0x72, // ) { return rever
	0x73, 0x65, 0x62, 0x69, 0x74, 0x73, 0x28, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, // sebits(_x); }.ui
	0x6e, 0x74, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, 0x31, 0x36, 0x28, // nt packHalf2x16(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // float2 _x).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x66, 0x33, 0x32, 0x74, 0x6f, 0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, // urn (f32tof16(_x
	0x2e, 0x79, 0x29, 0x3c, 0x3c, 0x31, 0x36, 0x29, 0x20, 0x7c, 0x20, 0x66, 0x33, 0x32, 0x74, 0x6f, // .y)<<16) | f32to
	0x66, 0x31, 0x36, 0x28, 0x5f, 0x78, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // f16(_x.x);.}.flo
	0x61, 0x74, 0x32, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x32, 0x78, // at2 unpackHalf2x
	0x31, 0x36, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // 16(uint _x).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x31, 0x36, 0x74, // turn float2(f16t
	0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, 0x20, 0x26, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x66, // of32(_x & 0xffff
	0x29, 0x2c, 0x20, 0x66, 0x31, 0x36, 0x74, 0x6f, 0x66, 0x33, 0x32, 0x28, 0x5f, 0x78, 0x20, 0x3e, // ), f16tof32(_x >
	0x3e, 0x20, 0x31, 0x36, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, // > 16) );.}.struc
	0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, // t BgfxSampler2D.
	0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, // {.SamplerState m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // _sampler;.Textur
	0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, // e2D m_texture;.}
	0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, // ;.struct BgfxISa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // mpler2D.{.Textur
	0x65, 0x32, 0x44, 0x3c, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // e2D<int4> m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // ure;.};.struct B
	0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x0a, 0x7b, 0x0a, // gfxUSampler2D.{.
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, // Texture2D<uint4>
	0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, //  m_texture;.};.s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // truct BgfxSample
	0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, // r2DArray.{.Sampl
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // erState m_sample
	0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // r;.Texture2DArra
	0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // y m_texture;.};.
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, // struct BgfxSampl
	0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, // er2DShadow.{.Sam
	0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, // plerComparisonSt
	0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, // ate m_sampler;.T
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // exture2D m_textu
	0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, // re;.};.struct Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, // fxSampler2DArray
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // Shadow.{.Sampler
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, // ComparisonState 
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, // m_sampler;.Textu
	0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // re2DArray m_text
	0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, // ure;.};.struct B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x53, // gfxSampler3D.{.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, // amplerState m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, // mpler;.Texture3D
	0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, //  m_texture;.};.s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, // truct BgfxISampl
	0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, // er3D.{.Texture3D
	0x3c, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // <int4> m_texture
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, // ;.};.struct Bgfx
	0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, // USampler3D.{.Tex
	0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x3c, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x3e, 0x20, 0x6d, 0x5f, // ture3D<uint4> m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, // texture;.};.stru
	0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, // ct BgfxSamplerCu
	0x62, 0x65, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, // be.{.SamplerStat
	0x65, 0x20, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, // e m_sampler;.Tex
	0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // tureCube m_textu
	0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, // re;.};.struct Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x53, 0x68, 0x61, // fxSamplerCubeSha
	0x64, 0x6f, 0x77, 0x0a, 0x7b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, // dow.{.SamplerCom
	0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x5f, 0x73, // parisonState m_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, // ampler;.TextureC
	0x75, 0x62, 0x65, 0x20, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, // ube m_texture;.}
	0x3b, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // ;.struct BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, 0x53, 0x0a, 0x7b, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x75, // pler2DMS.{.Textu
	0x72, 0x65, 0x32, 0x44, 0x4d, 0x53, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x3e, 0x20, 0x6d, // re2DMS<float4> m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, // _texture;.};.flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // at4 bgfxTexture2
	0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // D(BgfxSampler2D 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // _sampler, float2
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  _coord).{.retur
	0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, // n _sampler.m_tex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, // ture.Sample(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _coord);.}.float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x42, // 4 bgfxTexture2DB
	0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // ias(BgfxSampler2
	0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // D _sampler, floa
	0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t2 _coord, float
	0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  _bias).{.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x5f, // ure.SampleBias(_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // sampler.m_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, // r, _coord, _bias
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, // Texture2DLod(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler2D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float2 _coo
	0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, // rd, float _level
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // mpleLevel(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, // oord, _level);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x32, 0x44, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, // ure2DLodOffset(B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, // gfxSampler2D _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, // mpler, float2 _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, // oord, float _lev
	0x65, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, // el, int2 _offset
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // mpleLevel(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x5f, 0x6f, // oord, _level, _o
	0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ffset);.}.float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, //  bgfxTexture2DPr
	0x6f, 0x6a, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // oj(BgfxSampler2D
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  _sampler, float
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 3 _coord).{.floa
	0x74, 0x32, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // t2 coord = _coor
	0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // d.xy * rcp(_coor
	0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // d.z);.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // Sample(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, // m_sampler, coord
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, 0x67, // Texture2DProj(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // fxSampler2D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, // pler, float4 _co
	0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, // ord).{.float2 co
	0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, // ord = _coord.xy 
	0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, // * rcp(_coord.w);
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, // e(_sampler.m_sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // pler, coord);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float4 bgfxTextu
	0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // re2DGrad(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // pler2D _sampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, //  float2 _coord, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x66, 0x6c, // float2 _dPdx, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // oat2 _dPdy).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // turn _sampler.m_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x47, 0x72, // texture.SampleGr
	0x61, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, // ad(_sampler.m_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, // mpler, _coord, _
	0x64, 0x50, 0x64, 0x78, 0x2c, 0x20, 0x5f, 0x64, 0x50, 0x64, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // dPdx, _dPdy);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float4 bgfxTextu
	0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // re2DArray(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, // mpler2DArray _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, // mpler, float3 _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // oord).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // e.Sample(_sample
	0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, // r.m_sampler, _co
	0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, // ord);.}.float4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, // gfxTexture2DArra
	0x79, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // yLod(BgfxSampler
	0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // 2DArray _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // , float3 _coord,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, //  float _lod).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, // _texture.SampleL
	0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, // evel(_sampler.m_
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // sampler, _coord,
	0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  _lod);.}.float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x41, 0x72, //  bgfxTexture2DAr
	0x72, 0x61, 0x79, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, // rayLodOffset(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, // xSampler2DArray 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // _sampler, float3
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //  _coord, float _
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, // level, int2 _off
	0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // set).{.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, // .SampleLevel(_sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // mpler.m_sampler,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, //  _coord, _level,
	0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  _offset);.}.flo
	0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, // at bgfxShadow2D(
	0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, // BgfxSampler2DSha
	0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // dow _sampler, fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // oat3 _coord).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // eturn _sampler.m
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, // _texture.SampleC
	0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, // mpLevelZero(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // _coord.xy, _coor
	0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, // d.z);.}.float bg
	0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x42, // fxShadow2DProj(B
	0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x53, 0x68, 0x61, 0x64, // gfxSampler2DShad
	0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // ow _sampler, flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // at4 _coord).{.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x3d, 0x20, 0x5f, 0x63, 0x6f, // oat3 coord = _co
	0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x72, 0x63, 0x70, 0x28, 0x5f, 0x63, // ord.xyz * rcp(_c
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // oord.w);.return 
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // _sampler.m_textu
	0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, // re.SampleCmpLeve
	0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // lZero(_sampler.m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, // _sampler, coord.
	0x78, 0x79, 0x2c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // xy, coord.z);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, // float4 bgfxShado
	0x77, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, // w2DArray(BgfxSam
	0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x68, 0x61, 0x64, 0x6f, // pler2DArrayShado
	0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // w _sampler, floa
	0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // t4 _coord).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, // urn _sampler.m_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, // exture.SampleCmp
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // LevelZero(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // oord.xyz, _coord
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // .w);.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, // fxTexture3D(Bgfx
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // Sampler3D _sampl
	0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // er, float3 _coor
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // d).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, // pler.m_texture.S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, // ample(_sampler.m
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // );.}.float4 bgfx
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, // Texture3DLod(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler3D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float3 _coo
	0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, // rd, float _level
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // mpleLevel(_sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // er.m_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, // oord, _level);.}
	0x0a, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // .int4 bgfxTextur
	0x65, 0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // e3D(BgfxISampler
	0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // 3D _sampler, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, // at3 _coord).{.ui
	0x6e, 0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // nt3 size;._sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, // er.m_texture.Get
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, // Dimensions(size.
	0x78, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, // x, size.y, size.
	0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // z);.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, // ler.m_texture.Lo
	0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, // ad(int4(_coord *
	0x20, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, //  size, 0) );.}.u
	0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // int4 bgfxTexture
	0x33, 0x44, 0x28, 0x42, 0x67, 0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, // 3D(BgfxUSampler3
	0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // D _sampler, floa
	0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x75, 0x69, 0x6e, // t3 _coord).{.uin
	0x74, 0x33, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // t3 size;._sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, // r.m_texture.GetD
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x78, // imensions(size.x
	0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x79, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x7a, // , size.y, size.z
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // );.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, // er.m_texture.Loa
	0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x2a, 0x20, // d(int4(_coord * 
	0x73, 0x69, 0x7a, 0x65, 0x2c, 0x20, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // size, 0) );.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x43, 0x75, 0x62, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // Cube(BgfxSampler
	0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, // Cube _sampler, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // loat3 _coord).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // m_texture.Sample
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // ler, _coord);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, // float4 bgfxTextu
	0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, // reCubeBias(BgfxS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // amplerCube _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float3 _coo
	0x72, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, // rd, float _bias)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, // .{.return _sampl
	0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, // er.m_texture.Sam
	0x70, 0x6c, 0x65, 0x42, 0x69, 0x61, 0x73, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // pleBias(_sampler
	0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // .m_sampler, _coo
	0x72, 0x64, 0x2c, 0x20, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // rd, _bias);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // CubeLod(BgfxSamp
	0x6c, 0x65, 0x72, 0x43, 0x75, 0x62, 0x65, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // lerCube _sampler
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // , float3 _coord,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x7b, //  float _level).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .return _sampler
	0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // .m_texture.Sampl
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // eLevel(_sampler.
	0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // m_sampler, _coor
	0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // d, _level);.}.fl
	0x6f, 0x61, 0x74, 0x20, 0x62, 0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x43, 0x75, // oat bgfxShadowCu
	0x62, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x43, 0x75, // be(BgfxSamplerCu
	0x62, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // beShadow _sample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // r, float4 _coord
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x61, // ler.m_texture.Sa
	0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5a, 0x65, 0x72, 0x6f, // mpleCmpLevelZero
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, // (_sampler.m_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // ler, _coord.xyz,
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, //  _coord.w);.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, // oat4 bgfxTexelFe
	0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // tch(BgfxSampler2
	0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, // D _sampler, int2
	0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, //  _coord, int _lo
	0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, // d).{.return _sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, // pler.m_texture.L
	0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, // oad(int3(_coord,
	0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  _lod) );.}.floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, // t4 bgfxTexelFetc
	0x68, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, // hOffset(BgfxSamp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ler2D _sampler, 
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, // int2 _coord, int
	0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, //  _lod, int2 _off
	0x73, 0x65, 0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, // set).{.return _s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler.m_texture
	0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, // .Load(int3(_coor
	0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, // d, _lod), _offse
	0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x62, 0x67, // t );.}.float2 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, // fxTextureSize(Bg
	0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, // fxSampler2D _sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, // pler, int _lod).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, // {.float2 result;
	0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, // ._sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, // ure.GetDimension
	0x73, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, // s(result.x, resu
	0x6c, 0x74, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, // lt.y);.return re
	0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, // sult;.}.float4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, // gfxTextureGather
	0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, // (BgfxSampler2D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // sampler, float2 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // _coord).{.return
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, //  _sampler.m_text
	0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, // ure.GatherRed(_s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler.m_sampler
	0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // , _coord );.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat4 bgfxTexture
	0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x28, 0x42, 0x67, 0x66, // GatherOffset(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // xSampler2D _samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // ler, float2 _coo
	0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, // rd, int2 _offset
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, // ).{.return _samp
	0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x61, // ler.m_texture.Ga
	0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // therRed(_sampler
	0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // .m_sampler, _coo
	0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // rd, _offset );.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, // .float4 bgfxText
	0x75, 0x72, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, // ureGather(BgfxSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, // mpler2DArray _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, // mpler, float3 _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // oord).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x64, 0x28, 0x5f, 0x73, 0x61, 0x6d, // e.GatherRed(_sam
	0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // pler.m_sampler, 
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x69, 0x6e, 0x74, 0x34, // _coord );.}.int4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, //  bgfxTexelFetch(
	0x42, 0x67, 0x66, 0x78, 0x49, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, // BgfxISampler2D _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, // sampler, int2 _c
	0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, // oord, int _lod).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // {.return _sample
	0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, // r.m_texture.Load
	0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, // (int3(_coord, _l
	0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x20, 0x62, // od) );.}.uint4 b
	0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, // gfxTexelFetch(Bg
	0x66, 0x78, 0x55, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, // fxUSampler2D _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // mpler, int2 _coo
	0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // rd, int _lod).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // return _sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, // m_texture.Load(i
	0x6e, 0x74, 0x33, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, // nt3(_coord, _lod
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // ) );.}.float4 bg
	0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, // fxTexelFetch(Bgf
	0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x4d, 0x53, 0x20, 0x5f, 0x73, 0x61, // xSampler2DMS _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x32, 0x20, 0x5f, 0x63, 0x6f, 0x6f, // mpler, int2 _coo
	0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, // rd, int _sampleI
	0x64, 0x78, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // dx).{.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x4c, 0x6f, 0x61, 0x64, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x5f, 0x73, 0x61, // Load(_coord, _sa
	0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // mpleIdx);.}.floa
	0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, // t4 bgfxTexelFetc
	0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x41, // h(BgfxSampler2DA
	0x72, 0x72, 0x61, 0x79, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, // rray _sampler, i
	0x6e, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, // nt3 _coord, int 
	0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // _lod).{.return _
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler.m_textur
	0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, // e.Load(int4(_coo
	0x72, 0x64, 0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // rd, _lod) );.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x46, // loat4 bgfxTexelF
	0x65, 0x74, 0x63, 0x68, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // etch(BgfxSampler
	0x33, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, // 3D _sampler, int
	0x33, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x6c, // 3 _coord, int _l
	0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x73, 0x61, // od).{.return _sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // mpler.m_texture.
	0x4c, 0x6f, 0x61, 0x64, 0x28, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // Load(int4(_coord
	0x2c, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // , _lod) );.}.flo
	0x61, 0x74, 0x33, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, // at3 bgfxTextureS
	0x69, 0x7a, 0x65, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x33, // ize(BgfxSampler3
	0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x20, // D _sampler, int 
	0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, // _lod).{.float3 r
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, // esult;._sampler.
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, // m_texture.GetDim
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x28, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x78, // ensions(result.x
	0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x79, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x75, // , result.y, resu
	0x6c, 0x74, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x65, // lt.z);.return re
	0x73, 0x75, 0x6c, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, // sult;.}.float3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, // nstMul(float3 _v
	0x65, 0x63, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, 0x74, // ec, float3x3 _mt
	0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, // x) { return mul(
	0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, // _mtx, _vec); }.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, // loat3 instMul(fl
	0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // oat3x3 _mtx, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at3 _vec) { retu
	0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, // rn mul(_vec, _mt
	0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, // x); }.float4 ins
	0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, // tMul(float4 _vec
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, // , float4x4 _mtx)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x6d, //  { return mul(_m
	0x74, 0x78, 0x2c, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // tx, _vec); }.flo
	0x61, 0x74, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, // at4 instMul(floa
	0x74, 0x34, 0x78, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t4x4 _mtx, float
	0x34, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 4 _vec) { return
	0x20, 0x6d, 0x75, 0x6c, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, //  mul(_vec, _mtx)
	0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, // ; }.bool2 lessTh
	0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // an(float2 _a, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat2 _b) { retur
	0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, // n _a < _b; }.boo
	0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, // l3 lessThan(floa
	0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, // t3 _a, float3 _b
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, // ) { return _a < 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, // _b; }.bool4 less
	0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, // Than(float4 _a, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float4 _b) { ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, // urn _a < _b; }.b
	0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, // ool2 lessThanEqu
	0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // al(float2 _a, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat2 _b) { retur
	0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, // n _a <= _b; }.bo
	0x6f, 0x6c, 0x33, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, // ol3 lessThanEqua
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l(float3 _a, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _b) { return
	0x20, 0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, //  _a <= _b; }.boo
	0x6c, 0x34, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, // l4 lessThanEqual
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (float4 _a, floa
	0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // t4 _b) { return 
	0x5f, 0x61, 0x20, 0x3c, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, // _a <= _b; }.bool
	0x32, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, // 2 greaterThan(fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // oat2 _a, float2 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, 0x72, // > _b; }.bool3 gr
	0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // eaterThan(float3
	0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, //  _a, float3 _b) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, // { return _a > _b
	0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, // ; }.bool4 greate
	0x72, 0x54, 0x68, 0x61, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, // rThan(float4 _a,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float4 _b) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, // turn _a > _b; }.
	0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, // bool2 greaterTha
	0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, // nEqual(float2 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float2 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, // eturn _a >= _b; 
	0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, // }.bool3 greaterT
	0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // hanEqual(float3 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, // _a, float3 _b) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x62, //  return _a >= _b
	0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, // ; }.bool4 greate
	0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rThanEqual(float
	0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, // 4 _a, float4 _b)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3e, 0x3d, 0x20, //  { return _a >= 
	0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x6e, 0x6f, 0x74, 0x45, // _b; }.bool2 notE
	0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, // qual(float2 _a, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // float2 _b) { ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, // urn _a != _b; }.
	0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x20, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, // bool3 notEqual(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // loat3 _a, float3
	0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, //  _b) { return _a
	0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, //  != _b; }.bool4 
	0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // notEqual(float4 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, // _a, float4 _b) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x21, 0x3d, 0x20, 0x5f, 0x62, //  return _a != _b
	0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, // ; }.bool2 equal(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float2 _a, float
	0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // 2 _b) { return _
	0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // a == _b; }.bool3
	0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, //  equal(float3 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float3 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, // eturn _a == _b; 
	0x7d, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x20, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x66, 0x6c, // }.bool4 equal(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // oat4 _a, float4 
	0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, // _b) { return _a 
	0x3d, 0x3d, 0x20, 0x5f, 0x62, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, // == _b; }.float m
	0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // ix(float _a, flo
	0x61, 0x74, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, 0x29, // at _b, float _t)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, //  { return lerp(_
	0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // a, _b, _t); }.fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // oat2 mix(float2 
	0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, // _a, float2 _b, f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // loat2 _t) { retu
	0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, // rn lerp(_a, _b, 
	0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x69, // _t); }.float3 mi
	0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // x(float3 _a, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // at3 _b, float3 _
	0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, // t) { return lerp
	0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, 0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // (_a, _b, _t); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float4 mix(float
	0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x2c, // 4 _a, float4 _b,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x74, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, //  float4 _t) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6c, 0x65, 0x72, 0x70, 0x28, 0x5f, 0x61, 0x2c, 0x20, 0x5f, 0x62, // turn lerp(_a, _b
	0x2c, 0x20, 0x5f, 0x74, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, // , _t); }.float m
	0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // od(float _a, flo
	0x61, 0x74, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _b) { return 
	0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, // _a - _b * floor(
	0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // _a / _b); }.floa
	0x74, 0x32, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x61, // t2 mod(float2 _a
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, // , float2 _b) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, // eturn _a - _b * 
	0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, // floor(_a / _b); 
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, // }.float3 mod(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // at3 _a, float3 _
	0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, // b) { return _a -
	0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, //  _b * floor(_a /
	0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, //  _b); }.float4 m
	0x6f, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x61, 0x2c, 0x20, 0x66, 0x6c, // od(float4 _a, fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // oat4 _b) { retur
	0x6e, 0x20, 0x5f, 0x61, 0x20, 0x2d, 0x20, 0x5f, 0x62, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, // n _a - _b * floo
	0x72, 0x28, 0x5f, 0x61, 0x20, 0x2f, 0x20, 0x5f, 0x62, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, // r(_a / _b); }.fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // oat2 vec2_splat(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // float _x) { retu
	0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // rn float2(_x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, // ); }.float3 vec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, // _splat(float _x)
	0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  { return float3
	0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // (_x, _x, _x); }.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, // float4 vec4_spla
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // t(float _x) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, // turn float4(_x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, // _x, _x, _x); }.u
	0x69, 0x6e, 0x74, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, // int2 uvec2_splat
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // (uint _x) { retu
	0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, // rn uint2(_x, _x)
	0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x5f, // ; }.uint3 uvec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // splat(uint _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x5f, 0x78, //  return uint3(_x
	0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x69, 0x6e, // , _x, _x); }.uin
	0x74, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, // t4 uvec4_splat(u
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // int _x) { return
	0x20, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, //  uint4(_x, _x, _
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // x, _x); }.float4
	0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x66, // x4 mtxFromRows(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // loat4 _0, float4
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, //  _1, float4 _2, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // float4 _3).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, // urn float4x4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, //  _1, _2, _3);.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, // float4x4 mtxFrom
	0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, // Cols(float4 _0, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // float4 _1, float
	0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x29, // 4 _2, float4 _3)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, // .{.return transp
	0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x28, 0x5f, 0x30, 0x2c, // ose(float4x4(_0,
	0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, //  _1, _2, _3) );.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, // }.float3x3 mtxFr
	0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, // omRows(float3 _0
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // , float3 _1, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // at3 _2).{.return
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, //  float3x3(_0, _1
	0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, // , _2);.}.float3x
	0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x66, 0x6c, // 3 mtxFromCols(fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // oat3 _0, float3 
	0x5f, 0x31, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // _1, float3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, // .return transpos
	0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, // e(float3x3(_0, _
	0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x73, 0x74, 0x61, 0x74, // 1, _2) );.}.stat
	0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // ic float4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, // Rect;.static flo
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x65, 0x6c, 0x3b, // at4 u_viewTexel;
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // .static float4x4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, //  u_view;.static 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // float4x4 u_invVi
	0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ew;.static float
	0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, // 4x4 u_proj;.stat
	0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, // ic float4x4 u_in
	0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, // vProj;.static fl
	0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // oat4x4 u_viewPro
	0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // j;.static float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // x4 u_invViewProj
	0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // ;.static float4x
	0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x73, // 4 u_model[32];.s
	0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, // tatic float4x4 u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, // _modelView;.stat
	0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, // ic float4x4 u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x73, 0x74, 0x61, // delViewProj;.sta
	0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, // tic float4 u_alp
	0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x65, // haRef4;.float4 e
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // ncodeRE8(float _
	0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, // r).{.float expon
	0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, // ent = ceil(log2(
	0x5f, 0x72, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, // _r) );.return fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x72, 0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, // oat4(_r / exp2(e
	0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, // xponent)., 0.0.,
	0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, 0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, //  0.0., (exponent
	0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, //  + 128.0) / 255.
	0x30, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x64, 0x65, 0x63, // 0.);.}.float dec
	0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, // odeRE8(float4 _r
	0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, // e8).{.float expo
	0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, 0x20, // nent = _re8.w * 
	0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x72, // 255.0 - 128.0;.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x65, // eturn _re8.x * e
	0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x7d, // xp2(exponent);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x47, // .float4 encodeRG
	0x42, 0x45, 0x38, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // BE8(float3 _rgb)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x72, 0x67, 0x62, 0x65, 0x38, 0x3b, // .{.float4 rgbe8;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, // .float maxCompon
	0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x72, // ent = max(max(_r
	0x67, 0x62, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, // gb.x, _rgb.y), _
	0x72, 0x67, 0x62, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, // rgb.z);.float ex
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, 0x6f, // ponent = ceil(lo
	0x67, 0x32, 0x28, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, // g2(maxComponent)
	0x20, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, //  );.rgbe8.xyz = 
	0x5f, 0x72, 0x67, 0x62, 0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, // _rgb / exp2(expo
	0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x3d, // nent);.rgbe8.w =
	0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, //  (exponent + 128
	0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, // .0) / 255.0;.ret
	0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x65, 0x38, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // urn rgbe8;.}.flo
	0x61, 0x74, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x47, 0x42, 0x45, 0x38, 0x28, // at3 decodeRGBE8(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x29, 0x0a, 0x7b, // float4 _rgbe8).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, // .float exponent 
	0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, // = _rgbe8.w * 255
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // .0 - 128.0;.floa
	0x74, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, // t3 rgb = _rgbe8.
	0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, // xyz * exp2(expon
	0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, // ent);.return rgb
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, // ;.}.float3 encod
	0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // eNormalUint(floa
	0x74, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // t3 _normal).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x30, // turn _normal * 0
	0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // .5 + 0.5;.}.floa
	0x74, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, // t3 decodeNormalU
	0x69, 0x6e, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, // int(float3 _enco
	0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // dedNormal).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, // urn _encodedNorm
	0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, // al * 2.0 - 1.0;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, // }.float2 encodeN
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x66, // ormalSphereMap(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, // loat3 _normal).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // .return normaliz
	0x65, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, // e(_normal.xy) * 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2a, // sqrt(_normal.z *
	0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, //  0.5 + 0.5);.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, // loat3 decodeNorm
	0x61, 0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x66, 0x6c, 0x6f, 0x61, // alSphereMap(floa
	0x74, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, // t2 _encodedNorma
	0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x7a, 0x7a, 0x20, 0x3d, 0x20, // l).{.float zz = 
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, // dot(_encodedNorm
	0x61, 0x6c, 0x2c, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, // al, _encodedNorm
	0x61, 0x6c, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, // al) * 2.0 - 1.0;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x6e, // .return float3(n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // ormalize(_encode
	0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, // dNormal.xy) * sq
	0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x7a, 0x7a, 0x2a, 0x7a, 0x7a, 0x29, 0x2c, // rt(1.0 - zz*zz),
	0x20, 0x7a, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x6f, //  zz);.}.float2 o
	0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x66, 0x6c, // ctahedronWrap(fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // oat2 _val).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, // urn (1.0 - abs(_
	0x76, 0x61, 0x6c, 0x2e, 0x79, 0x78, 0x29, 0x20, 0x29, 0x0a, 0x2a, 0x20, 0x6d, 0x69, 0x78, 0x28, // val.yx) ).* mix(
	0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, // vec2_splat(-1.0)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, // , vec2_splat(1.0
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, // ), float2(greate
	0x72, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x2e, // rThanEqual(_val.
	0x78, 0x79, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, // xy, vec2_splat(0
	0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // .0) ) ) );.}.flo
	0x61, 0x74, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // at2 encodeNormal
	0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Octahedron(float
	0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x6e, 0x6f, // 3 _normal).{._no
	0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2f, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, // rmal /= abs(_nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, // mal.x) + abs(_no
	0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, // rmal.y) + abs(_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ormal.z);._norma
	0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, // l.xy = _normal.z
	0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  >= 0.0 ? _norma
	0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, // l.xy : octahedro
	0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, // nWrap(_normal.xy
	0x29, 0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, // );._normal.xy = 
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, // _normal.xy * 0.5
	0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, //  + 0.5;.return _
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // normal.xy;.}.flo
	0x61, 0x74, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // at3 decodeNormal
	0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // Octahedron(float
	0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // 2 _encodedNormal
	0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, // ).{._encodedNorm
	0x61, 0x6c, 0x20, 0x3d, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, // al = _encodedNor
	0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, // mal * 2.0 - 1.0;
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, // .float3 normal;.
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // normal.z = 1.0 -
	0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, //  abs(_encodedNor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, // mal.x) - abs(_en
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // codedNormal.y);.
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // normal.xy = norm
	0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, 0x20, 0x5f, 0x65, // al.z >= 0.0 ? _e
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, // ncodedNormal.xy 
	0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, // : octahedronWrap
	0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // (_encodedNormal.
	0x78, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // xy);.return norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x7d, // alize(normal);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, // .float3 convertR
	0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, // GB2XYZ(float3 _r
	0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x78, 0x79, 0x7a, // gb).{.float3 xyz
	0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, // ;.xyz.x = dot(fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x34, 0x31, 0x32, 0x34, 0x35, 0x36, 0x34, 0x2c, 0x20, // oat3(0.4124564, 
	0x30, 0x2e, 0x33, 0x35, 0x37, 0x35, 0x37, 0x36, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x30, // 0.3575761, 0.180
	0x34, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x78, 0x79, // 4375), _rgb);.xy
	0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // z.y = dot(float3
	0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, // (0.2126729, 0.71
	0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x30, // 51522, 0.0721750
	0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, // ), _rgb);.xyz.z 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, // = dot(float3(0.0
	0x31, 0x39, 0x33, 0x33, 0x33, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x39, 0x31, 0x39, 0x32, // 193339, 0.119192
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, 0x30, 0x33, 0x30, 0x34, 0x31, 0x29, 0x2c, 0x20, 0x5f, // 0, 0.9503041), _
	0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, 0x79, 0x7a, // rgb);.return xyz
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, // ;.}.float3 conve
	0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // rtXYZ2RGB(float3
	0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //  _xyz).{.float3 
	0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // rgb;.rgb.x = dot
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x20, 0x33, 0x2e, 0x32, 0x34, 0x30, 0x34, 0x35, // (float3( 3.24045
	0x34, 0x32, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x33, 0x37, 0x31, 0x33, 0x38, 0x35, 0x2c, 0x20, // 42, -1.5371385, 
	0x2d, 0x30, 0x2e, 0x34, 0x39, 0x38, 0x35, 0x33, 0x31, 0x34, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, // -0.4985314), _xy
	0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // z);.rgb.y = dot(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x39, 0x36, 0x39, 0x32, 0x36, 0x36, // float3(-0.969266
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x38, 0x37, 0x36, 0x30, 0x31, 0x30, 0x38, 0x2c, 0x20, 0x30, 0x2e, // 0, 1.8760108, 0.
	0x30, 0x34, 0x31, 0x35, 0x35, 0x36, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, // 0415560), _xyz);
	0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, // .rgb.z = dot(flo
	0x61, 0x74, 0x33, 0x28, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x36, 0x34, 0x33, 0x34, 0x2c, 0x20, // at3( 0.0556434, 
	0x2d, 0x30, 0x2e, 0x32, 0x30, 0x34, 0x30, 0x32, 0x35, 0x39, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x35, // -0.2040259, 1.05
	0x37, 0x32, 0x32, 0x35, 0x32, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, // 72252), _xyz);.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, // eturn rgb;.}.flo
	0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, // at3 convertXYZ2Y
	0x78, 0x79, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, // xy(float3 _xyz).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x76, 0x20, 0x3d, 0x20, 0x31, 0x2e, // {.float inv = 1.
	0x30, 0x2f, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 0/dot(_xyz, floa
	0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // t3(1.0, 1.0, 1.0
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ) );.return floa
	0x74, 0x33, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x2e, // t3(_xyz.y, _xyz.
	0x78, 0x2a, 0x69, 0x6e, 0x76, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x2a, 0x69, 0x6e, // x*inv, _xyz.y*in
	0x76, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, // v);.}.float3 con
	0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x66, 0x6c, 0x6f, 0x61, // vertYxy2XYZ(floa
	0x74, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t3 _Yxy).{.float
	0x33, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, // 3 xyz;.xyz.x = _
	0x59, 0x78, 0x79, 0x2e, 0x78, 0x2a, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, 0x2f, 0x5f, 0x59, 0x78, // Yxy.x*_Yxy.y/_Yx
	0x79, 0x2e, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, // y.z;.xyz.y = _Yx
	0x79, 0x2e, 0x78, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, // y.x;.xyz.z = _Yx
	0x79, 0x2e, 0x78, 0x2a, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, // y.x*(1.0 - _Yxy.
	0x79, 0x20, 0x2d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x29, 0x2f, 0x5f, 0x59, 0x78, 0x79, // y - _Yxy.z)/_Yxy
	0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // .z;.return xyz;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, // }.float3 convert
	0x52, 0x47, 0x42, 0x32, 0x59, 0x78, 0x79, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // RGB2Yxy(float3 _
	0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, // rgb).{.return co
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, 0x28, 0x63, 0x6f, 0x6e, // nvertXYZ2Yxy(con
	0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x5f, 0x72, 0x67, 0x62, // vertRGB2XYZ(_rgb
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, // ) );.}.float3 co
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x52, 0x47, 0x42, 0x28, 0x66, 0x6c, 0x6f, // nvertYxy2RGB(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at3 _Yxy).{.retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x52, 0x47, // rn convertXYZ2RG
	0x42, 0x28, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x58, 0x59, 0x5a, // B(convertYxy2XYZ
	0x28, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // (_Yxy) );.}.floa
	0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x75, // t3 convertRGB2Yu
	0x76, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, // v(float3 _rgb).{
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, 0x79, 0x75, 0x76, // .float3 yuv;.yuv
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, // .x = dot(_rgb, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x35, // loat3(0.299, 0.5
	0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x79, 0x75, // 87, 0.114) );.yu
	0x76, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x2d, 0x20, // v.y = (_rgb.x - 
	0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, 0x2a, 0x30, 0x2e, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x30, // yuv.x)*0.713 + 0
	0x2e, 0x35, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, // .5;.yuv.z = (_rg
	0x62, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, 0x2a, 0x30, 0x2e, 0x35, // b.z - yuv.x)*0.5
	0x36, 0x34, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 64 + 0.5;.return
	0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, //  yuv;.}.float3 c
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x75, 0x76, 0x32, 0x52, 0x47, 0x42, 0x28, 0x66, 0x6c, // onvertYuv2RGB(fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // oat3 _yuv).{.flo
	0x61, 0x74, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, // at3 rgb;.rgb.x =
	0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x34, 0x30, 0x33, 0x2a, //  _yuv.x + 1.403*
	0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, // (_yuv.y-0.5);.rg
	0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x30, // b.y = _yuv.x - 0
	0x2e, 0x33, 0x34, 0x34, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, 0x35, // .344*(_yuv.y-0.5
	0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x34, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, // ) - 0.714*(_yuv.
	0x7a, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, // z-0.5);.rgb.z = 
	0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, 0x37, 0x33, 0x2a, 0x28, // _yuv.x + 1.773*(
	0x5f, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // _yuv.z-0.5);.ret
	0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // urn rgb;.}.float
	0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, // 3 convertRGB2YIQ
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // (float3 _rgb).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, // float3 yiq;.yiq.
	0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, // x = dot(float3(0
	0x2e, 0x32, 0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x31, // .299, 0.587, 0.1
	0x31, 0x34, 0x20, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, // 14 ), _rgb);.yiq
	0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // .y = dot(float3(
	0x30, 0x2e, 0x35, 0x39, 0x35, 0x37, 0x31, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x37, 0x34, // 0.595716, -0.274
	0x34, 0x35, 0x33, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x33, 0x32, 0x31, 0x32, 0x36, 0x33, 0x29, 0x2c, // 453, -0.321263),
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x7a, 0x20, 0x3d, 0x20, //  _rgb);.yiq.z = 
	0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, // dot(float3(0.211
	0x34, 0x35, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x32, 0x32, 0x35, 0x39, 0x31, 0x2c, 0x20, // 456, -0.522591, 
	0x30, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x33, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // 0.311135), _rgb)
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, 0x7d, 0x0a, // ;.return yiq;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x49, // float3 convertYI
	0x51, 0x32, 0x52, 0x47, 0x42, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x79, 0x69, // Q2RGB(float3 _yi
	0x71, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, // q).{.float3 rgb;
	0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, // .rgb.x = dot(flo
	0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, 0x36, 0x33, 0x2c, // at3(1.0, 0.9563,
	0x20, 0x30, 0x2e, 0x36, 0x32, 0x31, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x3b, //  0.6210), _yiq);
	0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, // .rgb.y = dot(flo
	0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x37, 0x32, 0x31, // at3(1.0, -0.2721
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x36, 0x34, 0x37, 0x34, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, // , -0.6474), _yiq
	0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, // );.rgb.z = dot(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x31, 0x30, // loat3(1.0, -1.10
	0x37, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x37, 0x30, 0x34, 0x36, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, // 70, 1.7046), _yi
	0x71, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, // q);.return rgb;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, // }.float3 toLinea
	0x72, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, // r(float3 _rgb).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, // .return pow(abs(
	0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, // _rgb), vec3_spla
	0x74, 0x28, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // t(2.2) );.}.floa
	0x74, 0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x66, 0x6c, 0x6f, 0x61, // t4 toLinear(floa
	0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // t4 _rgba).{.retu
	0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, // rn float4(toLine
	0x61, 0x72, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, // ar(_rgba.xyz), _
	0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rgba.w);.}.float
	0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, // 3 toLinearAccura
	0x74, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, // te(float3 _rgb).
	0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6c, 0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, // {.float3 lo = _r
	0x67, 0x62, 0x20, 0x2f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // gb / 12.92;.floa
	0x74, 0x33, 0x20, 0x68, 0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x20, 0x28, 0x5f, 0x72, // t3 hi = pow( (_r
	0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x31, 0x2e, // gb + 0.055) / 1.
	0x30, 0x35, 0x35, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // 055, vec3_splat(
	0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, // 2.4) );.float3 r
	0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, 0x20, 0x6c, 0x6f, 0x2c, // gb = mix(hi, lo,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, //  float3(lessThan
	0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // Equal(_rgb, vec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x20, // _splat(0.04045) 
	0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, // ) ) );.return rg
	0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, // b;.}.float4 toLi
	0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x66, 0x6c, 0x6f, // nearAccurate(flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, // at4 _rgba).{.ret
	0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, 0x4c, 0x69, 0x6e, // urn float4(toLin
	0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, // earAccurate(_rgb
	0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, // a.xyz), _rgba.w)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, // ;.}.float toGamm
	0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // a(float _r).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x29, // turn pow(abs(_r)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // , 1.0/2.2);.}.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, // oat3 toGamma(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at3 _rgb).{.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, // rn pow(abs(_rgb)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, // , vec3_splat(1.0
	0x2f, 0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // /2.2) );.}.float
	0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // 4 toGamma(float4
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  _rgba).{.return
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, //  float4(toGamma(
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // _rgba.xyz), _rgb
	0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, // a.w);.}.float3 t
	0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x66, // oGammaAccurate(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, // loat3 _rgb).{.fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x6c, 0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, // oat3 lo = _rgb *
	0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x68, //  12.92;.float3 h
	0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, // i = pow(abs(_rgb
	0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, // ), vec3_splat(1.
	0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, // 0/2.4) ) * 1.055
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  - 0.055;.float3
	0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, 0x20, 0x6c, //  rgb = mix(hi, l
	0x6f, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, // o, float3(lessTh
	0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, // anEqual(_rgb, ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, // c3_splat(0.00313
	0x30, 0x38, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 08) ) ) );.retur
	0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // n rgb;.}.float4 
	0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, // toGammaAccurate(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, // float4 _rgba).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, // return float4(to
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x5f, 0x72, // GammaAccurate(_r
	0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, // gba.xyz), _rgba.
	0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x6f, 0x52, // w);.}.float3 toR
	0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // einhard(float3 _
	0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x6f, // rgb).{.return to
	0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2f, 0x28, 0x5f, 0x72, 0x67, 0x62, // Gamma(_rgb/(_rgb
	0x2b, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, // +vec3_splat(1.0)
	0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x74, //  ) );.}.float4 t
	0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // oReinhard(float4
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  _rgba).{.return
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, //  float4(toReinha
	0x72, 0x64, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, // rd(_rgba.xyz), _
	0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rgba.w);.}.float
	0x33, 0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 3 toFilmic(float
	0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x3d, // 3 _rgb).{._rgb =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, //  max(vec3_splat(
	0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, // 0.0), _rgb - 0.0
	0x30, 0x34, 0x29, 0x3b, 0x0a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, // 04);._rgb = (_rg
	0x62, 0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, // b*(6.2*_rgb + 0.
	0x35, 0x29, 0x20, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x36, 0x2e, // 5) ) / (_rgb*(6.
	0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x37, 0x29, 0x20, 0x2b, 0x20, // 2*_rgb + 1.7) + 
	0x30, 0x2e, 0x30, 0x36, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, // 0.06);.return _r
	0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x74, 0x6f, 0x46, // gb;.}.float4 toF
	0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, // ilmic(float4 _rg
	0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, // ba).{.return flo
	0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, // at4(toFilmic(_rg
	0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // ba.xyz), _rgba.w
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x74, 0x6f, 0x41, 0x63, // );.}.float3 toAc
	0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // esFilmic(float3 
	0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x61, // _rgb).{.float aa
	0x20, 0x3d, 0x20, 0x32, 0x2e, 0x35, 0x31, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //  = 2.51f;.float 
	0x62, 0x62, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // bb = 0.03f;.floa
	0x74, 0x20, 0x63, 0x63, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x34, 0x33, 0x66, 0x3b, 0x0a, 0x66, 0x6c, // t cc = 2.43f;.fl
	0x6f, 0x61, 0x74, 0x20, 0x64, 0x64, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x39, 0x66, 0x3b, 0x0a, // oat dd = 0.59f;.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x65, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x31, 0x34, 0x66, // float ee = 0.14f
	0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, // ;.return saturat
	0x65, 0x28, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x61, 0x61, 0x2a, 0x5f, 0x72, 0x67, // e( (_rgb*(aa*_rg
	0x62, 0x20, 0x2b, 0x20, 0x62, 0x62, 0x29, 0x20, 0x29, 0x2f, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, // b + bb) )/(_rgb*
	0x28, 0x63, 0x63, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x64, 0x64, 0x29, 0x20, 0x2b, // (cc*_rgb + dd) +
	0x20, 0x65, 0x65, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  ee) );.}.float4
	0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x66, 0x6c, //  toAcesFilmic(fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, // oat4 _rgba).{.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x74, 0x6f, 0x41, 0x63, // turn float4(toAc
	0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, // esFilmic(_rgba.x
	0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, // yz), _rgba.w);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, // .float3 luma(flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // at3 _rgb).{.floa
	0x74, 0x20, 0x79, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t yy = dot(float
	0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, // 3(0.2126729, 0.7
	0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, // 151522, 0.072175
	0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 0), _rgb);.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x79, 0x79, 0x29, // n vec3_splat(yy)
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x28, // ;.}.float4 luma(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, // float4 _rgba).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x6c, 0x75, // return float4(lu
	0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, // ma(_rgba.xyz), _
	0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rgba.w);.}.float
	0x33, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x66, 0x6c, 0x6f, 0x61, // 3 conSatBri(floa
	0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // t3 _rgb, float3 
	0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x72, // _csb).{.float3 r
	0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x5f, 0x63, 0x73, 0x62, // gb = _rgb * _csb
	0x2e, 0x7a, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, // .z;.rgb = mix(lu
	0x6d, 0x61, 0x28, 0x72, 0x67, 0x62, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, 0x63, // ma(rgb), rgb, _c
	0x73, 0x62, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // sb.y);.rgb = mix
	0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, // (vec3_splat(0.5)
	0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // , rgb, _csb.x);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, // return rgb;.}.fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x66, // oat4 conSatBri(f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // loat4 _rgba, flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // at3 _csb).{.retu
	0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, // rn float4(conSat
	0x42, 0x72, 0x69, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, // Bri(_rgba.xyz, _
	0x63, 0x73, 0x62, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // csb), _rgba.w);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, // }.float3 posteri
	0x7a, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, // ze(float3 _rgb, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, // float _numColors
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, // ).{.return floor
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, // (_rgb*_numColors
	0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x3b, 0x0a, // ) / _numColors;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, // }.float4 posteri
	0x7a, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, // ze(float4 _rgba,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, //  float _numColor
	0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, // s).{.return floa
	0x74, 0x34, 0x28, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x72, 0x67, // t4(posterize(_rg
	0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, // ba.xyz, _numColo
	0x72, 0x73, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, // rs), _rgba.w);.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x66, 0x6c, // .float3 sepia(fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, // oat3 _rgb).{.flo
	0x61, 0x74, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // at3 color;.color
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, // .x = dot(_rgb, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x39, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x37, // loat3(0.393, 0.7
	0x36, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x39, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, 0x6f, // 69, 0.189) );.co
	0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, // lor.y = dot(_rgb
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x34, 0x39, 0x2c, 0x20, // , float3(0.349, 
	0x30, 0x2e, 0x36, 0x38, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x36, 0x38, 0x29, 0x20, 0x29, 0x3b, // 0.686, 0.168) );
	0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // .color.z = dot(_
	0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x37, // rgb, float3(0.27
	0x32, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x33, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x33, 0x31, 0x29, // 2, 0.534, 0.131)
	0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, //  );.return color
	0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x73, 0x65, 0x70, 0x69, 0x61, // ;.}.float4 sepia
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, // (float4 _rgba).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x73, // .return float4(s
	0x65, 0x70, 0x69, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // epia(_rgba.xyz),
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, //  _rgba.w);.}.flo
	0x61, 0x74, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, // at3 blendOverlay
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x66, // (float3 _base, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, // loat3 _blend).{.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, // float3 lt = 2.0 
	0x2a, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, // * _base * _blend
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x67, 0x74, 0x65, 0x20, 0x3d, 0x20, 0x31, // ;.float3 gte = 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // .0 - 2.0 * (1.0 
	0x2d, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - _base) * (1.0 
	0x2d, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // - _blend);.retur
	0x6e, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x74, 0x2c, 0x20, 0x67, 0x74, 0x65, 0x2c, 0x20, 0x73, // n mix(lt, gte, s
	0x74, 0x65, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, // tep(vec3_splat(0
	0x2e, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // .5), _base) );.}
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, // .float4 blendOve
	0x72, 0x6c, 0x61, 0x79, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x61, 0x73, // rlay(float4 _bas
	0x65, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, // e, float4 _blend
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ).{.return float
	0x34, 0x28, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x5f, // 4(blendOverlay(_
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, // base.xyz, _blend
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x77, 0x29, 0x3b, // .xyz), _base.w);
	0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, // .}.float3 adjust
	0x48, 0x75, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, // Hue(float3 _rgb,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x68, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x66, //  float _hue).{.f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x79, 0x69, 0x71, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6e, 0x76, // loat3 yiq = conv
	0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, // ertRGB2YIQ(_rgb)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, // ;.float angle = 
	0x5f, 0x68, 0x75, 0x65, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x28, 0x79, 0x69, 0x71, // _hue + atan2(yiq
	0x2e, 0x7a, 0x2c, 0x20, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // .z, yiq.y);.floa
	0x74, 0x20, 0x6c, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x79, // t len = length(y
	0x69, 0x71, 0x2e, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, // iq.yz);.return c
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, 0x42, 0x28, 0x66, 0x6c, // onvertYIQ2RGB(fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x78, 0x2c, 0x20, 0x6c, 0x65, 0x6e, 0x2a, // oat3(yiq.x, len*
	0x63, 0x6f, 0x73, 0x28, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x6e, 0x2a, // cos(angle), len*
	0x73, 0x69, 0x6e, 0x28, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, // sin(angle) ) );.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x6c, 0x6f, // }.float4 packFlo
	0x61, 0x74, 0x54, 0x6f, 0x52, 0x67, 0x62, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // atToRgba(float _
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, // value).{.const f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c, // loat4 shift = fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, // oat4(256 * 256 *
	0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2c, //  256, 256 * 256,
	0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, //  256, 1.0);.cons
	0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x3d, 0x20, // t float4 mask = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, // float4(0, 1.0 / 
	0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, // 256.0, 1.0 / 256
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, // .0, 1.0 / 256.0)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x3d, 0x20, // ;.float4 comp = 
	0x66, 0x72, 0x61, 0x63, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, 0x73, 0x68, // frac(_value * sh
	0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, 0x3d, 0x20, 0x63, 0x6f, // ift);.comp -= co
	0x6d, 0x70, 0x2e, 0x78, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, // mp.xxyz * mask;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, // return comp;.}.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x52, 0x67, 0x62, 0x61, 0x54, // loat unpackRgbaT
	0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x72, // oFloat(float4 _r
	0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, // gba).{.const flo
	0x61, 0x74, 0x34, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // at4 shift = floa
	0x74, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, // t4(1.0 / (256.0 
	0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, // * 256.0 * 256.0)
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, // , 1.0 / (256.0 *
	0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, //  256.0), 1.0 / 2
	0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // 56.0, 1.0);.retu
	0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x73, 0x68, // rn dot(_rgba, sh
	0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x70, // ift);.}.float2 p
	0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, // ackHalfFloat(flo
	0x61, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // at _value).{.con
	0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, // st float2 shift 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x31, 0x2e, // = float2(256, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 0);.const float2
	0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, //  mask = float2(0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // , 1.0 / 256.0);.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, // float2 comp = fr
	0x61, 0x63, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, 0x73, 0x68, 0x69, 0x66, // ac(_value * shif
	0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, 0x3d, 0x20, 0x63, 0x6f, 0x6d, 0x70, // t);.comp -= comp
	0x2e, 0x78, 0x78, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // .xx * mask;.retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rn comp;.}.float
	0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, //  unpackHalfFloat
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x72, 0x67, 0x29, 0x0a, 0x7b, 0x0a, 0x63, // (float2 _rg).{.c
	0x6f, 0x6e, 0x73, 0x74, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x73, 0x68, 0x69, 0x66, // onst float2 shif
	0x74, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, // t = float2(1.0 /
	0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, //  256.0, 1.0);.re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x2c, 0x20, 0x73, 0x68, // turn dot(_rg, sh
	0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x61, // ift);.}.float ra
	0x6e, 0x64, 0x6f, 0x6d, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x75, 0x76, 0x29, // ndom(float2 _uv)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x28, 0x73, // .{.return frac(s
	0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x66, // in(dot(_uv.xy, f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x32, 0x2e, 0x39, 0x38, 0x39, 0x38, 0x2c, 0x20, 0x37, // loat2(12.9898, 7
	0x38, 0x2e, 0x32, 0x33, 0x33, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 8.233) ) ) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x35, 0x33, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // 58.5453);.}.floa
	0x74, 0x33, 0x20, 0x66, 0x69, 0x78, 0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, // t3 fixCubeLookup
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x76, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (float3 _v, floa
	0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x74, // t _lod, float _t
	0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x29, // opLevelCubeSize)
	0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x78, 0x20, 0x3d, 0x20, 0x61, 0x62, // .{.float ax = ab
	0x73, 0x28, 0x5f, 0x76, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, // s(_v.x);.float a
	0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, // y = abs(_v.y);.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, // loat az = abs(_v
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x20, // .z);.float vmax 
	0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x78, 0x2c, 0x20, 0x61, 0x79, // = max(max(ax, ay
	0x29, 0x2c, 0x20, 0x61, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x63, // ), az);.float sc
	0x61, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x65, 0x78, 0x70, 0x32, // ale = 1.0 - exp2
	0x28, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, // (_lod) / _topLev
	0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x69, 0x66, 0x20, 0x28, // elCubeSize;.if (
	0x61, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, // ax != vmax) { _v
	0x2e, 0x78, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, // .x *= scale; }.i
	0x66, 0x20, 0x28, 0x61, 0x79, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, // f (ay != vmax) {
	0x20, 0x5f, 0x76, 0x2e, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, //  _v.y *= scale; 
	0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, // }.if (az != vmax
	0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x7a, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, // ) { _v.z *= scal
	0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, 0x3b, 0x0a, // e; }.return _v;.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // }.float2 texture
	0x32, 0x44, 0x42, 0x63, 0x35, 0x28, 0x42, 0x67, 0x66, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // 2DBc5(BgfxSample
	0x72, 0x32, 0x44, 0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, // r2D _sampler, fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // oat2 _uv).{.retu
	0x72, 0x6e, 0x20, 0x62, 0x67, 0x66, 0x78, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // rn bgfxTexture2D
	0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x2e, // (_sampler, _uv).
	0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x63, // xy;.}.float3x3 c
	0x6f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // ofactor(float4x4
	0x20, 0x5f, 0x6d, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, //  _m).{.return fl
	0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, // oat3x3(._m[1][1]
	0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // *_m[2][2]-_m[1][
	0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, // 2]*_m[2][1],._m[
	0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, // 1][2]*_m[2][0]-_
	0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, // m[1][0]*_m[2][2]
	0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, // ,._m[1][0]*_m[2]
	0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // [1]-_m[1][1]*_m[
	0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, // 2][0],._m[0][2]*
	0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, // _m[2][1]-_m[0][1
	0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, // ]*_m[2][2],._m[0
	0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, // ][0]*_m[2][2]-_m
	0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2c, // [0][2]*_m[2][0],
	0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, // ._m[0][1]*_m[2][
	0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, // 0]-_m[0][0]*_m[2
	0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, // ][1],._m[0][1]*_
	0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, // m[1][2]-_m[0][2]
	0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, // *_m[1][1],._m[0]
	0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, // [2]*_m[1][0]-_m[
	0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, // 0][0]*_m[1][2],.
	0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, // _m[0][0]*_m[1][1
	0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, // ]-_m[0][1]*_m[1]
	0x5b, 0x30, 0x5d, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // [0].);.}.uniform
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, //  float4x4 u_view
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, // Projection;.stat
	0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x65, 0x79, 0x65, 0x50, // ic float4 u_eyeP
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, // osition;.static 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x20, 0x75, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x6c, // float3x3 u_highl
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68, // ightPositionLigh
	0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, // tDirectionLightC
	0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, // olor;.static flo
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6e, 0x75, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // at4 u_numSpecula
	0x72, 0x4d, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, // rMipLevelsAnimat
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // ionTime;.uniform
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, //  float4x4 u_mode
	0x6c, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, // lToWorld;.Output
	0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x61, 0x5f, //  main( float4 a_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3a, 0x20, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x30, 0x20, // color0 : COLOR0 
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // , float3 a_norma
	0x6c, 0x20, 0x3a, 0x20, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // l : NORMAL , flo
	0x61, 0x74, 0x34, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3a, // at4 a_position :
	0x20, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  POSITION , floa
	0x74, 0x34, 0x20, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x20, 0x3a, 0x20, 0x54, // t4 a_tangent : T
	0x41, 0x4e, 0x47, 0x45, 0x4e, 0x54, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // ANGENT , float2 
	0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, // a_texcoord0 : TE
	0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // XCOORD0 , float4
	0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, //  i_data0 : TEXCO
	0x4f, 0x52, 0x44, 0x37, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x5f, // ORD7 , float4 i_
	0x64, 0x61, 0x74, 0x61, 0x31, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, // data1 : TEXCOORD
	0x36, 0x20, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, // 6 , float4 i_dat
	0x61, 0x32, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x35, 0x20, 0x2c, // a2 : TEXCOORD5 ,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x33, 0x20, //  float4 i_data3 
	0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x34, 0x29, 0x20, 0x7b, 0x20, 0x4f, // : TEXCOORD4) { O
	0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x3b, // utput _varying_;
	0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x54, 0x42, 0x4e, //  _varying_.v_TBN
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, //  = float3x3(0.0,
	0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, // 0.0,0.0,0.0,0.0,
	0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0x2e, 0x30, 0x29, // 0.0,0.0,0.0,0.0)
	0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, // ;; _varying_.v_c
	0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x31, // olor0 = float4(1
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // .0, 0.0, 0.0, 1.
	0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, // 0);; _varying_.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x3d, // _positionWorld =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  float3(0.0, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x3b, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // , 0.0);; _varyin
	0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x3d, // g_.v_texcoord0 =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  float2(0.0, 0.0
	0x29, 0x3b, 0x3b, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x74, // );;.{.float4x4 t
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x3b, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, // ransform;.transf
	0x6f, 0x72, 0x6d, 0x5b, 0x30, 0x5d, 0x20, 0x3d, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x30, // orm[0] = i_data0
	0x3b, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x31, 0x5d, 0x20, 0x3d, // ;.transform[1] =
	0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x31, 0x3b, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, //  i_data1;.transf
	0x6f, 0x72, 0x6d, 0x5b, 0x32, 0x5d, 0x20, 0x3d, 0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x32, // orm[2] = i_data2
	0x3b, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x33, 0x5d, 0x20, 0x3d, // ;.transform[3] =
	0x20, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x33, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  i_data3;.float4
	0x78, 0x34, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, // x4 modelTransfor
	0x6d, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, // m = mul(transfor
	0x6d, 0x2c, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, // m, u_modelToWorl
	0x64, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, // d);.float4 trans
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x3d, // formedPosWorld =
	0x20, 0x6d, 0x75, 0x6c, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, //  mul(a_position,
	0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x29, //  modelTransform)
	0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x67, 0x6c, 0x5f, 0x50, // ;._varying_.gl_P
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x6d, 0x75, 0x6c, 0x28, 0x74, 0x72, // osition = mul(tr
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x57, 0x6f, 0x72, 0x6c, // ansformedPosWorl
	0x64, 0x2c, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, // d, u_viewProject
	0x69, 0x6f, 0x6e, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, // ion);._varying_.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x20, // v_positionWorld 
	0x3d, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73, // = transformedPos
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x74, 0x72, 0x61, 0x6e, // World.xyz / tran
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // sformedPosWorld.
	0x77, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // w;.float3 normal
	0x57, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x75, // W = normalize(mu
	0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // l(float4(a_norma
	0x6c, 0x2e, 0x78, 0x2c, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x2c, // l.x, a_normal.y,
	0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  a_normal.z, 0.0
	0x29, 0x2c, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, // ), modelTransfor
	0x6d, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // m).xyz);.float3 
	0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // tangentW = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x75, 0x6c, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // lize(mul(float4(
	0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x78, 0x2c, 0x20, 0x61, 0x5f, 0x74, // a_tangent.x, a_t
	0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x79, 0x2c, 0x20, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, // angent.y, a_tang
	0x65, 0x6e, 0x74, 0x2e, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x6d, 0x6f, 0x64, // ent.z, 0.0), mod
	0x65, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x29, 0x2e, 0x78, 0x79, 0x7a, // elTransform).xyz
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x62, 0x69, 0x74, 0x61, 0x6e, 0x67, // );.float3 bitang
	0x65, 0x6e, 0x74, 0x57, 0x20, 0x3d, 0x20, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x28, 0x6e, 0x6f, 0x72, // entW = cross(nor
	0x6d, 0x61, 0x6c, 0x57, 0x2c, 0x20, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x57, 0x29, 0x20, // malW, tangentW) 
	0x2a, 0x20, 0x61, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x3b, 0x0a, 0x5f, // * a_tangent.w;._
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x54, 0x42, 0x4e, 0x20, 0x3d, // varying_.v_TBN =
	0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x74, 0x61, 0x6e, //  mtxFromRows(tan
	0x67, 0x65, 0x6e, 0x74, 0x57, 0x2c, 0x20, 0x62, 0x69, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, // gentW, bitangent
	0x57, 0x2c, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x57, 0x29, 0x3b, 0x0a, 0x5f, 0x76, 0x61, // W, normalW);._va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // rying_.v_texcoor
	0x64, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // d0 = a_texcoord0
	0x3b, 0x0a, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x2e, 0x76, 0x5f, 0x63, 0x6f, // ;._varying_.v_co
	0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, // lor0 = a_color0;
	0x0a, 0x7d, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x76, 0x61, 0x72, 0x79, 0x69, // .} return _varyi
	0x6e, 0x67, 0x5f, 0x3b, 0x0a, 0x7d, 0x0a, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ng_;.}..........
	0x70, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // p...q...........
	0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x44, 0x33, 0x44, 0x53, 0x48, 0x44, 0x52, 0x00, 0x74, 0x06, 0x00, 0x00, 0x00, 0x00, // ..D3DSHDR.t.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ...... ..`......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x1a, 0x09, 0x2f, 0xf1, 0x18, 0x00, 0x00, 0x00, 0x10, 0x02, // ......../.......
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x01, 0x00, // ................
	0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..=.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, // .............. .
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x12, 0x00, 0x25, 0x11, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, // ....%...........
	0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x26, 0x00, 0x51, 0x11, 0x0a, 0x10, 0x00, 0x00, 0x08, 0x00, // main..&.Q.......
	0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, // ..........u_view
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, // Projection....".
	0x51, 0x11, 0x0a, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0xff, 0xff, 0xff, 0xff, // Q.........@.....
	0xff, 0xff, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, // ..u_modelToWorld
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, // ................
	0xff, 0xff, 0x1a, 0x09, 0x2f, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..../...........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x77, 0x09, 0x31, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, // ......w.1.......
	0x00, 0x8e, 0x0e, 0x00, 0x3f, 0x5c, 0x0f, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x20, 0x00, // ....?.....L... .
	0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..,...|.........
	0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x06, // ..............t.
	0x00, 0x00, 0x20, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .. ..`..........
	0x00, 0x00, 0x02, 0x00, 0x09, 0x00, 0x90, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x05, // ..............,.
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x90, 0x64, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......d........
	0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x6e, 0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x2d, 0xba, // ..main.none...-.
	0x2e, 0xf1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0x20, 0x00, // ..........t... .
	0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, // .`..............
	0x02, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, // ................
	0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, // ..t.............
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x3a, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x74, // ......C:.Users.t
	0x2d, 0x6f, 0x6c, 0x6f, 0x6c, 0x75, 0x5c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x72, 0x65, // -ololu.source.re
	0x70, 0x6f, 0x73, 0x5c, 0x4f, 0x70, 0x65, 0x6e, 0x58, 0x52, 0x2d, 0x4d, 0x69, 0x78, 0x65, 0x64, // pos.OpenXR-Mixed
	0x52, 0x65, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5c, 0x70, // Reality.shared.p
	0x62, 0x72, 0x5c, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x43, 0x6f, 0x6d, 0x70, 0x69, // br.Shaders.Compi
	0x6c, 0x65, 0x20, 0x50, 0x62, 0x72, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x53, // le Pbr Shaders.S
	0x68, 0x61, 0x64, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x2e, 0x62, 0x69, 0x6e, 0x2e, 0x68, 0x2e, // haderTemp.bin.h.
	0x68, 0x6c, 0x73, 0x6c, 0x00, 0x00, 0xfe, 0xef, 0xfe, 0xef, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, // hlsl............
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, // ................
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x94, 0x2e, 0x31, 0x01, 0x9c, 0xf9, 0x64, 0x5f, 0x01, 0x00, 0x00, 0x00, 0x42, 0x07, // ....1...d_....B.
	0xd7, 0x86, 0x83, 0xcf, 0xf7, 0x4c, 0x85, 0xaa, 0x8c, 0xf2, 0xd5, 0x19, 0xf4, 0x4b, 0x9c, 0x00, // .....L.......K..
	0x00, 0x00, 0x2f, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x00, 0x2f, 0x6e, 0x61, 0x6d, // ../LinkInfo./nam
	0x65, 0x73, 0x00, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6c, // es./src/headerbl
	0x6f, 0x63, 0x6b, 0x00, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x63, // ock./src/files/c
	0x3a, 0x5c, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x74, 0x2d, 0x6f, 0x6c, 0x6f, 0x6c, 0x75, 0x5c, // :.users.t-ololu.
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x5c, 0x6f, 0x70, 0x65, // source.repos.ope
	0x6e, 0x78, 0x72, 0x2d, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x74, 0x79, // nxr-mixedreality
	0x5c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5c, 0x70, 0x62, 0x72, 0x5c, 0x73, 0x68, 0x61, 0x64, // .shared.pbr.shad
	0x65, 0x72, 0x73, 0x5c, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x20, 0x70, 0x62, 0x72, 0x20, // ers.compile pbr 
	0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x74, 0x65, // shaders.shaderte
	0x6d, 0x70, 0x2e, 0x62, 0x69, 0x6e, 0x2e, 0x68, 0x2e, 0x68, 0x6c, 0x73, 0x6c, 0x00, 0x04, 0x00, // mp.bin.h.hlsl...
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x08, 0x00, // ..........".....
	0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x51, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .......Q3.......
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xa8, 0x01, // ...... .........
	0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x51, // ......8.......:Q
	0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x29, 0x50, 0x00, 0x00, 0xcc, 0x10, 0x00, 0x00, 0x34, 0x00, // ......)P......4.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0x2c, 0x00, // ......(...8...,.
	0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x3c, 0x00, // ..`.......k...<.
	0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x06, 0x00, // ..j...=...1.....
	0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x41, 0x00, // ..>...?...@...A.
	0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x45, 0x00, // ..B...C...D...E.
	0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x49, 0x00, // ..F...G...H...I.
	0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x4d, 0x00, // ..J...K...L...M.
	0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x51, 0x00, // ..N...O...P...Q.
	0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x55, 0x00, // ..R...S...T...U.
	0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x59, 0x00, // ..V...W...X...Y.
	0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x5d, 0x00, // ..Z...[.......].
	0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x61, 0x00, // ..^..._...`...a.
	0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x32, 0x00, // ..b...c...d...2.
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b, 0x00, // ................
	0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0f, 0x00, // ................
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, // ................
	0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x17, 0x00, // ................
	0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1b, 0x00, // ................
	0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x1f, 0x00, // ................
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x23, 0x00, // .. ...!..."...#.
	0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x27, 0x00, // ..$...%...&...'.
	0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2b, 0x00, // ..(...)...*...+.
	0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x2f, 0x00, // ..,...-......./.
	0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x35, 0x00, // ..0...3...4...5.
	0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x39, 0x00, // ..6...7...8...9.
	0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x65, 0x00, // ..:...;.......e.
	0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x68, 0x00, // ..f...g...i...h.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..l.............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x00, 0x00, 0x09, 0x05, 0x00, 0x02, 0x00, 0x01, 0x00, 0x03, 0x00, 0x10, 0x00, 0x17, 0x00, // ................
	0x16, 0x00, 0x15, 0x00, 0x14, 0x00, 0x80, 0x00,                                                 // ........
};